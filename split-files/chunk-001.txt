
`,e)},t.Pipeline.load=function(e){var r=new t.Pipeline;return e.forEach(function(n){var i=t.Pipeline.registeredFunctions[n];if(i)r.add(i);else throw new Error("Cannot load unregistered function: "+n)}),r},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(r){t.Pipeline.warnIfFunctionNotRegistered(r),this._stack.push(r)},this)},t.Pipeline.prototype.after=function(e,r){t.Pipeline.warnIfFunctionNotRegistered(r);var n=this._stack.indexOf(e);if(n==-1)throw new Error("Cannot find existingFn");n=n+1,this._stack.splice(n,0,r)},t.Pipeline.prototype.before=function(e,r){t.Pipeline.warnIfFunctionNotRegistered(r);var n=this._stack.indexOf(e);if(n==-1)throw new Error("Cannot find existingFn");this._stack.splice(n,0,r)},t.Pipeline.prototype.remove=function(e){var r=this._stack.indexOf(e);r!=-1&&this._stack.splice(r,1)},t.Pipeline.prototype.run=function(e){for(var r=this._stack.length,n=0;n<r;n++){for(var i=this._stack[n],s=[],o=0;o<e.length;o++){var a=i(e[o],o,e);if(!(a==null||a===""))if(Array.isArray(a))for(var u=0;u<a.length;u++)s.push(a[u]);else s.push(a)}e=s}return e},t.Pipeline.prototype.runString=function(e,r){var n=new t.Token(e,r);return this.run([n]).map(function(i){return i.toString()})},t.Pipeline.prototype.reset=function(){this._stack=[]},t.Pipeline.prototype.toJSON=function(){return this._stack.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})};t.Vector=function(e){this._magnitude=0,this.elements=e||[]},t.Vector.prototype.positionForIndex=function(e){if(this.elements.length==0)return 0;for(var r=0,n=this.elements.length/2,i=n-r,s=Math.floor(i/2),o=this.elements[s*2];i>1&&(o<e&&(r=s),o>e&&(n=s),o!=e);)i=n-r,s=r+Math.floor(i/2),o=this.elements[s*2];if(o==e||o>e)return s*2;if(o<e)return(s+1)*2},t.Vector.prototype.insert=function(e,r){this.upsert(e,r,function(){throw"duplicate index"})},t.Vector.prototype.upsert=function(e,r,n){this._magnitude=0;var i=this.positionForIndex(e);this.elements[i]==e?this.elements[i+1]=n(this.elements[i+1],r):this.elements.splice(i,0,e,r)},t.Vector.prototype.magnitude=function(){if(this._magnitude)return this._magnitude;for(var e=0,r=this.elements.length,n=1;n<r;n+=2){var i=this.elements[n];e+=i*i}return this._magnitude=Math.sqrt(e)},t.Vector.prototype.dot=function(e){for(var r=0,n=this.elements,i=e.elements,s=n.length,o=i.length,a=0,u=0,l=0,h=0;l<s&&h<o;)a=n[l],u=i[h],a<u?l+=2:a>u?h+=2:a==u&&(r+=n[l+1]*i[h+1],l+=2,h+=2);return r},t.Vector.prototype.similarity=function(e){return this.dot(e)/this.magnitude()||0},t.Vector.prototype.toArray=function(){for(var e=new Array(this.elements.length/2),r=1,n=0;r<this.elements.length;r+=2,n++)e[n]=this.elements[r];return e},t.Vector.prototype.toJSON=function(){return this.elements};t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},r={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",s=n+"[^aeiouy]*",o=i+"[aeiou]*",a="^("+s+")?"+o+s,u="^("+s+")?"+o+s+"("+o+")?$",l="^("+s+")?"+o+s+o+s,h="^("+s+")?"+i,p=new RegExp(a),v=new RegExp(l),b=new RegExp(u),y=new RegExp(h),E=/^(.+?)(ss|i)es$/,f=/^(.+?)([^s])s$/,m=/^(.+?)eed$/,T=/^(.+?)(ed|ing)$/,w=/.$/,I=/(at|bl|iz)$/,M=new RegExp("([^aeiouylsz])\\1$"),B=new RegExp("^"+s+i+"[^aeiouwxy]$"),V=/^(.+?[^aeiou])y$/,q=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,$=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,H=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,W=/^(.+?)(s|t)(ion)$/,P=/^(.+?)e$/,U=/ll$/,G=new RegExp("^"+s+i+"[^aeiouwxy]$"),z=function(c){var g,O,S,d,x,R,F;if(c.length<3)return c;if(S=c.substr(0,1),S=="y"&&(c=S.toUpperCase()+c.substr(1)),d=E,x=f,d.test(c)?c=c.replace(d,"$1$2"):x.test(c)&&(c=c.replace(x,"$1$2")),d=m,x=T,d.test(c)){var L=d.exec(c);d=p,d.test(L[1])&&(d=w,c=c.replace(d,""))}else if(x.test(c)){var L=x.exec(c);g=L[1],x=y,x.test(g)&&(c=g,x=I,R=M,F=B,x.test(c)?c=c+"e":R.test(c)?(d=w,c=c.replace(d,"")):F.test(c)&&(c=c+"e"))}if(d=V,d.test(c)){var L=d.exec(c);g=L[1],c=g+"i"}if(d=q,d.test(c)){var L=d.exec(c);g=L[1],O=L[2],d=p,d.test(g)&&(c=g+e[O])}if(d=$,d.test(c)){var L=d.exec(c);g=L[1],O=L[2],d=p,d.test(g)&&(c=g+r[O])}if(d=H,x=W,d.test(c)){var L=d.exec(c);g=L[1],d=v,d.test(g)&&(c=g)}else if(x.test(c)){var L=x.exec(c);g=L[1]+L[2],x=v,x.test(g)&&(c=g)}if(d=P,d.test(c)){var L=d.exec(c);g=L[1],d=v,x=b,R=G,(d.test(g)||x.test(g)&&!R.test(g))&&(c=g)}return d=U,x=v,d.test(c)&&x.test(c)&&(d=w,c=c.replace(d,"")),S=="y"&&(c=S.toLowerCase()+c.substr(1)),c};return function(D){return D.update(z)}}(),t.Pipeline.registerFunction(t.stemmer,"stemmer");t.generateStopWordFilter=function(e){var r=e.reduce(function(n,i){return n[i]=i,n},{});return function(n){if(n&&r[n.toString()]!==n.toString())return n}},t.stopWordFilter=t.generateStopWordFilter(["a","able","about","across","after","all","almost","also","am","among","an","and","any","are","as","at","be","because","been","but","by","can","cannot","could","dear","did","do","does","either","else","ever","every","for","from","get","got","had","has","have","he","her","hers","him","his","how","however","i","if","in","into","is","it","its","just","least","let","like","likely","may","me","might","most","must","my","neither","no","nor","not","of","off","often","on","only","or","other","our","own","rather","said","say","says","she","should","since","so","some","than","that","the","their","them","then","there","these","they","this","tis","to","too","twas","us","wants","was","we","were","what","when","where","which","while","who","whom","why","will","with","would","yet","you","your"]),t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter");t.trimmer=function(e){return e.update(function(r){return r.replace(/^\W+/,"").replace(/\W+$/,"")})},t.Pipeline.registerFunction(t.trimmer,"trimmer");t.TokenSet=function(){this.final=!1,this.edges={},this.id=t.TokenSet._nextId,t.TokenSet._nextId+=1},t.TokenSet._nextId=1,t.TokenSet.fromArray=function(e){for(var r=new t.TokenSet.Builder,n=0,i=e.length;n<i;n++)r.insert(e[n]);return r.finish(),r.root},t.TokenSet.fromClause=function(e){return"editDistance"in e?t.TokenSet.fromFuzzyString(e.term,e.editDistance):t.TokenSet.fromString(e.term)},t.TokenSet.fromFuzzyString=function(e,r){for(var n=new t.TokenSet,i=[{node:n,editsRemaining:r,str:e}];i.length;){var s=i.pop();if(s.str.length>0){var o=s.str.charAt(0),a;o in s.node.edges?a=s.node.edges[o]:(a=new t.TokenSet,s.node.edges[o]=a),s.str.length==1&&(a.final=!0),i.push({node:a,editsRemaining:s.editsRemaining,str:s.str.slice(1)})}if(s.editsRemaining!=0){if("*"in s.node.edges)var u=s.node.edges["*"];else{var u=new t.TokenSet;s.node.edges["*"]=u}if(s.str.length==0&&(u.final=!0),i.push({node:u,editsRemaining:s.editsRemaining-1,str:s.str}),s.str.length>1&&i.push({node:s.node,editsRemaining:s.editsRemaining-1,str:s.str.slice(1)}),s.str.length==1&&(s.node.final=!0),s.str.length>=1){if("*"in s.node.edges)var l=s.node.edges["*"];else{var l=new t.TokenSet;s.node.edges["*"]=l}s.str.length==1&&(l.final=!0),i.push({node:l,editsRemaining:s.editsRemaining-1,str:s.str.slice(1)})}if(s.str.length>1){var h=s.str.charAt(0),p=s.str.charAt(1),v;p in s.node.edges?v=s.node.edges[p]:(v=new t.TokenSet,s.node.edges[p]=v),s.str.length==1&&(v.final=!0),i.push({node:v,editsRemaining:s.editsRemaining-1,str:h+s.str.slice(2)})}}}return n},t.TokenSet.fromString=function(e){for(var r=new t.TokenSet,n=r,i=0,s=e.length;i<s;i++){var o=e[i],a=i==s-1;if(o=="*")r.edges[o]=r,r.final=a;else{var u=new t.TokenSet;u.final=a,r.edges[o]=u,r=u}}return n},t.TokenSet.prototype.toArray=function(){for(var e=[],r=[{prefix:"",node:this}];r.length;){var n=r.pop(),i=Object.keys(n.node.edges),s=i.length;n.node.final&&(n.prefix.charAt(0),e.push(n.prefix));for(var o=0;o<s;o++){var a=i[o];r.push({prefix:n.prefix.concat(a),node:n.node.edges[a]})}}return e},t.TokenSet.prototype.toString=function(){if(this._str)return this._str;for(var e=this.final?"1":"0",r=Object.keys(this.edges).sort(),n=r.length,i=0;i<n;i++){var s=r[i],o=this.edges[s];e=e+s+o.id}return e},t.TokenSet.prototype.intersect=function(e){for(var r=new t.TokenSet,n=void 0,i=[{qNode:e,output:r,node:this}];i.length;){n=i.pop();for(var s=Object.keys(n.qNode.edges),o=s.length,a=Object.keys(n.node.edges),u=a.length,l=0;l<o;l++)for(var h=s[l],p=0;p<u;p++){var v=a[p];if(v==h||h=="*"){var b=n.node.edges[v],y=n.qNode.edges[h],E=b.final&&y.final,f=void 0;v in n.output.edges?(f=n.output.edges[v],f.final=f.final||E):(f=new t.TokenSet,f.final=E,n.output.edges[v]=f),i.push({qNode:y,output:f,node:b})}}}return r},t.TokenSet.Builder=function(){this.previousWord="",this.root=new t.TokenSet,this.uncheckedNodes=[],this.minimizedNodes={}},t.TokenSet.Builder.prototype.insert=function(e){var r,n=0;if(e<this.previousWord)throw new Error("Out of order word insertion");for(var i=0;i<e.length&&i<this.previousWord.length&&e[i]==this.previousWord[i];i++)n++;this.minimize(n),this.uncheckedNodes.length==0?r=this.root:r=this.uncheckedNodes[this.uncheckedNodes.length-1].child;for(var i=n;i<e.length;i++){var s=new t.TokenSet,o=e[i];r.edges[o]=s,this.uncheckedNodes.push({parent:r,char:o,child:s}),r=s}r.final=!0,this.previousWord=e},t.TokenSet.Builder.prototype.finish=function(){this.minimize(0)},t.TokenSet.Builder.prototype.minimize=function(e){for(var r=this.uncheckedNodes.length-1;r>=e;r--){var n=this.uncheckedNodes[r],i=n.child.toString();i in this.minimizedNodes?n.parent.edges[n.char]=this.minimizedNodes[i]:(n.child._str=i,this.minimizedNodes[i]=n.child),this.uncheckedNodes.pop()}};t.Index=function(e){this.invertedIndex=e.invertedIndex,this.fieldVectors=e.fieldVectors,this.tokenSet=e.tokenSet,this.fields=e.fields,this.pipeline=e.pipeline},t.Index.prototype.search=function(e){return this.query(function(r){var n=new t.QueryParser(e,r);n.parse()})},t.Index.prototype.query=function(e){for(var r=new t.Query(this.fields),n=Object.create(null),i=Object.create(null),s=Object.create(null),o=Object.create(null),a=Object.create(null),u=0;u<this.fields.length;u++)i[this.fields[u]]=new t.Vector;e.call(r,r);for(var u=0;u<r.clauses.length;u++){var l=r.clauses[u],h=null,p=t.Set.empty;l.usePipeline?h=this.pipeline.runString(l.term,{fields:l.fields}):h=[l.term];for(var v=0;v<h.length;v++){var b=h[v];l.term=b;var y=t.TokenSet.fromClause(l),E=this.tokenSet.intersect(y).toArray();if(E.length===0&&l.presence===t.Query.presence.REQUIRED){for(var f=0;f<l.fields.length;f++){var m=l.fields[f];o[m]=t.Set.empty}break}for(var T=0;T<E.length;T++)for(var w=E[T],I=this.invertedIndex[w],M=I._index,f=0;f<l.fields.length;f++){var m=l.fields[f],B=I[m],V=Object.keys(B),q=w+"/"+m,$=new t.Set(V);if(l.presence==t.Query.presence.REQUIRED&&(p=p.union($),o[m]===void 0&&(o[m]=t.Set.complete)),l.presence==t.Query.presence.PROHIBITED){a[m]===void 0&&(a[m]=t.Set.empty),a[m]=a[m].union($);continue}if(i[m].upsert(M,l.boost,function(Qe,Ie){return Qe+Ie}),!s[q]){for(var H=0;H<V.length;H++){var W=V[H],P=new t.FieldRef(W,m),U=B[W],G;(G=n[P])===void 0?n[P]=new t.MatchData(w,m,U):G.add(w,m,U)}s[q]=!0}}}if(l.presence===t.Query.presence.REQUIRED)for(var f=0;f<l.fields.length;f++){var m=l.fields[f];o[m]=o[m].intersect(p)}}for(var z=t.Set.complete,D=t.Set.empty,u=0;u<this.fields.length;u++){var m=this.fields[u];o[m]&&(z=z.intersect(o[m])),a[m]&&(D=D.union(a[m]))}var c=Object.keys(n),g=[],O=Object.create(null);if(r.isNegated()){c=Object.keys(this.fieldVectors);for(var u=0;u<c.length;u++){var P=c[u],S=t.FieldRef.fromString(P);n[P]=new t.MatchData}}for(var u=0;u<c.length;u++){var S=t.FieldRef.fromString(c[u]),d=S.docRef;if(!!z.contains(d)&&!D.contains(d)){var x=this.fieldVectors[S],R=i[S.fieldName].similarity(x),F;if((F=O[d])!==void 0)F.score+=R,F.matchData.combine(n[S]);else{var L={ref:d,score:R,matchData:n[S]};O[d]=L,g.push(L)}}}return g.sort(function(Se,ke){return ke.score-Se.score})},t.Index.prototype.toJSON=function(){var e=Object.keys(this.invertedIndex).sort().map(function(n){return[n,this.invertedIndex[n]]},this),r=Object.keys(this.fieldVectors).map(function(n){return[n,this.fieldVectors[n].toJSON()]},this);return{version:t.version,fields:this.fields,fieldVectors:r,invertedIndex:e,pipeline:this.pipeline.toJSON()}},t.Index.load=function(e){var r={},n={},i=e.fieldVectors,s=Object.create(null),o=e.invertedIndex,a=new t.TokenSet.Builder,u=t.Pipeline.load(e.pipeline);e.version!=t.version&&t.utils.warn("Version mismatch when loading serialised index. Current version of lunr '"+t.version+"' does not match serialized index '"+e.version+"'");for(var l=0;l<i.length;l++){var h=i[l],p=h[0],v=h[1];n[p]=new t.Vector(v)}for(var l=0;l<o.length;l++){var h=o[l],b=h[0],y=h[1];a.insert(b),s[b]=y}return a.finish(),r.fields=e.fields,r.fieldVectors=n,r.invertedIndex=s,r.tokenSet=a.root,r.pipeline=u,new t.Index(r)};t.Builder=function(){this._ref="id",this._fields=Object.create(null),this._documents=Object.create(null),this.invertedIndex=Object.create(null),this.fieldTermFrequencies={},this.fieldLengths={},this.tokenizer=t.tokenizer,this.pipeline=new t.Pipeline,this.searchPipeline=new t.Pipeline,this.documentCount=0,this._b=.75,this._k1=1.2,this.termIndex=0,this.metadataWhitelist=[]},t.Builder.prototype.ref=function(e){this._ref=e},t.Builder.prototype.field=function(e,r){if(/\//.test(e))throw new RangeError("Field '"+e+"' contains illegal character '/'");this._fields[e]=r||{}},t.Builder.prototype.b=function(e){e<0?this._b=0:e>1?this._b=1:this._b=e},t.Builder.prototype.k1=function(e){this._k1=e},t.Builder.prototype.add=function(e,r){var n=e[this._ref],i=Object.keys(this._fields);this._documents[n]=r||{},this.documentCount+=1;for(var s=0;s<i.length;s++){var o=i[s],a=this._fields[o].extractor,u=a?a(e):e[o],l=this.tokenizer(u,{fields:[o]}),h=this.pipeline.run(l),p=new t.FieldRef(n,o),v=Object.create(null);this.fieldTermFrequencies[p]=v,this.fieldLengths[p]=0,this.fieldLengths[p]+=h.length;for(var b=0;b<h.length;b++){var y=h[b];if(v[y]==null&&(v[y]=0),v[y]+=1,this.invertedIndex[y]==null){var E=Object.create(null);E._index=this.termIndex,this.termIndex+=1;for(var f=0;f<i.length;f++)E[i[f]]=Object.create(null);this.invertedIndex[y]=E}this.invertedIndex[y][o][n]==null&&(this.invertedIndex[y][o][n]=Object.create(null));for(var m=0;m<this.metadataWhitelist.length;m++){var T=this.metadataWhitelist[m],w=y.metadata[T];this.invertedIndex[y][o][n][T]==null&&(this.invertedIndex[y][o][n][T]=[]),this.invertedIndex[y][o][n][T].push(w)}}}},t.Builder.prototype.calculateAverageFieldLengths=function(){for(var e=Object.keys(this.fieldLengths),r=e.length,n={},i={},s=0;s<r;s++){var o=t.FieldRef.fromString(e[s]),a=o.fieldName;i[a]||(i[a]=0),i[a]+=1,n[a]||(n[a]=0),n[a]+=this.fieldLengths[o]}for(var u=Object.keys(this._fields),s=0;s<u.length;s++){var l=u[s];n[l]=n[l]/i[l]}this.averageFieldLength=n},t.Builder.prototype.createFieldVectors=function(){for(var e={},r=Object.keys(this.fieldTermFrequencies),n=r.length,i=Object.create(null),s=0;s<n;s++){for(var o=t.FieldRef.fromString(r[s]),a=o.fieldName,u=this.fieldLengths[o],l=new t.Vector,h=this.fieldTermFrequencies[o],p=Object.keys(h),v=p.length,b=this._fields[a].boost||1,y=this._documents[o.docRef].boost||1,E=0;E<v;E++){var f=p[E],m=h[f],T=this.invertedIndex[f]._index,w,I,M;i[f]===void 0?(w=t.idf(this.invertedIndex[f],this.documentCount),i[f]=w):w=i[f],I=w*((this._k1+1)*m)/(this._k1*(1-this._b+this._b*(u/this.averageFieldLength[a]))+m),I*=b,I*=y,M=Math.round(I*1e3)/1e3,l.insert(T,M)}e[o]=l}this.fieldVectors=e},t.Builder.prototype.createTokenSet=function(){this.tokenSet=t.TokenSet.fromArray(Object.keys(this.invertedIndex).sort())},t.Builder.prototype.build=function(){return this.calculateAverageFieldLengths(),this.createFieldVectors(),this.createTokenSet(),new t.Index({invertedIndex:this.invertedIndex,fieldVectors:this.fieldVectors,tokenSet:this.tokenSet,fields:Object.keys(this._fields),pipeline:this.searchPipeline})},t.Builder.prototype.use=function(e){var r=Array.prototype.slice.call(arguments,1);r.unshift(this),e.apply(this,r)},t.MatchData=function(e,r,n){for(var i=Object.create(null),s=Object.keys(n||{}),o=0;o<s.length;o++){var a=s[o];i[a]=n[a].slice()}this.metadata=Object.create(null),e!==void 0&&(this.metadata[e]=Object.create(null),this.metadata[e][r]=i)},t.MatchData.prototype.combine=function(e){for(var r=Object.keys(e.metadata),n=0;n<r.length;n++){var i=r[n],s=Object.keys(e.metadata[i]);this.metadata[i]==null&&(this.metadata[i]=Object.create(null));for(var o=0;o<s.length;o++){var a=s[o],u=Object.keys(e.metadata[i][a]);this.metadata[i][a]==null&&(this.metadata[i][a]=Object.create(null));for(var l=0;l<u.length;l++){var h=u[l];this.metadata[i][a][h]==null?this.metadata[i][a][h]=e.metadata[i][a][h]:this.metadata[i][a][h]=this.metadata[i][a][h].concat(e.metadata[i][a][h])}}}},t.MatchData.prototype.add=function(e,r,n){if(!(e in this.metadata)){this.metadata[e]=Object.create(null),this.metadata[e][r]=n;return}if(!(r in this.metadata[e])){this.metadata[e][r]=n;return}for(var i=Object.keys(n),s=0;s<i.length;s++){var o=i[s];o in this.metadata[e][r]?this.metadata[e][r][o]=this.metadata[e][r][o].concat(n[o]):this.metadata[e][r][o]=n[o]}},t.Query=function(e){this.clauses=[],this.allFields=e},t.Query.wildcard=new String("*"),t.Query.wildcard.NONE=0,t.Query.wildcard.LEADING=1,t.Query.wildcard.TRAILING=2,t.Query.presence={OPTIONAL:1,REQUIRED:2,PROHIBITED:3},t.Query.prototype.clause=function(e){return"fields"in e||(e.fields=this.allFields),"boost"in e||(e.boost=1),"usePipeline"in e||(e.usePipeline=!0),"wildcard"in e||(e.wildcard=t.Query.wildcard.NONE),e.wildcard&t.Query.wildcard.LEADING&&e.term.charAt(0)!=t.Query.wildcard&&(e.term="*"+e.term),e.wildcard&t.Query.wildcard.TRAILING&&e.term.slice(-1)!=t.Query.wildcard&&(e.term=""+e.term+"*"),"presence"in e||(e.presence=t.Query.presence.OPTIONAL),this.clauses.push(e),this},t.Query.prototype.isNegated=function(){for(var e=0;e<this.clauses.length;e++)if(this.clauses[e].presence!=t.Query.presence.PROHIBITED)return!1;return!0},t.Query.prototype.term=function(e,r){if(Array.isArray(e))return e.forEach(function(i){this.term(i,t.utils.clone(r))},this),this;var n=r||{};return n.term=e.toString(),this.clause(n),this},t.QueryParseError=function(e,r,n){this.name="QueryParseError",this.message=e,this.start=r,this.end=n},t.QueryParseError.prototype=new Error,t.QueryLexer=function(e){this.lexemes=[],this.str=e,this.length=e.length,this.pos=0,this.start=0,this.escapeCharPositions=[]},t.QueryLexer.prototype.run=function(){for(var e=t.QueryLexer.lexText;e;)e=e(this)},t.QueryLexer.prototype.sliceString=function(){for(var e=[],r=this.start,n=this.pos,i=0;i<this.escapeCharPositions.length;i++)n=this.escapeCharPositions[i],e.push(this.str.slice(r,n)),r=n+1;return e.push(this.str.slice(r,this.pos)),this.escapeCharPositions.length=0,e.join("")},t.QueryLexer.prototype.emit=function(e){this.lexemes.push({type:e,str:this.sliceString(),start:this.start,end:this.pos}),this.start=this.pos},t.QueryLexer.prototype.escapeCharacter=function(){this.escapeCharPositions.push(this.pos-1),this.pos+=1},t.QueryLexer.prototype.next=function(){if(this.pos>=this.length)return t.QueryLexer.EOS;var e=this.str.charAt(this.pos);return this.pos+=1,e},t.QueryLexer.prototype.width=function(){return this.pos-this.start},t.QueryLexer.prototype.ignore=function(){this.start==this.pos&&(this.pos+=1),this.start=this.pos},t.QueryLexer.prototype.backup=function(){this.pos-=1},t.QueryLexer.prototype.acceptDigitRun=function(){var e,r;do e=this.next(),r=e.charCodeAt(0);while(r>47&&r<58);e!=t.QueryLexer.EOS&&this.backup()},t.QueryLexer.prototype.more=function(){return this.pos<this.length},t.QueryLexer.EOS="EOS",t.QueryLexer.FIELD="FIELD",t.QueryLexer.TERM="TERM",t.QueryLexer.EDIT_DISTANCE="EDIT_DISTANCE",t.QueryLexer.BOOST="BOOST",t.QueryLexer.PRESENCE="PRESENCE",t.QueryLexer.lexField=function(e){return e.backup(),e.emit(t.QueryLexer.FIELD),e.ignore(),t.QueryLexer.lexText},t.QueryLexer.lexTerm=function(e){if(e.width()>1&&(e.backup(),e.emit(t.QueryLexer.TERM)),e.ignore(),e.more())return t.QueryLexer.lexText},t.QueryLexer.lexEditDistance=function(e){return e.ignore(),e.acceptDigitRun(),e.emit(t.QueryLexer.EDIT_DISTANCE),t.QueryLexer.lexText},t.QueryLexer.lexBoost=function(e){return e.ignore(),e.acceptDigitRun(),e.emit(t.QueryLexer.BOOST),t.QueryLexer.lexText},t.QueryLexer.lexEOS=function(e){e.width()>0&&e.emit(t.QueryLexer.TERM)},t.QueryLexer.termSeparator=t.tokenizer.separator,t.QueryLexer.lexText=function(e){for(;;){var r=e.next();if(r==t.QueryLexer.EOS)return t.QueryLexer.lexEOS;if(r.charCodeAt(0)==92){e.escapeCharacter();continue}if(r==":")return t.QueryLexer.lexField;if(r=="~")return e.backup(),e.width()>0&&e.emit(t.QueryLexer.TERM),t.QueryLexer.lexEditDistance;if(r=="^")return e.backup(),e.width()>0&&e.emit(t.QueryLexer.TERM),t.QueryLexer.lexBoost;if(r=="+"&&e.width()===1||r=="-"&&e.width()===1)return e.emit(t.QueryLexer.PRESENCE),t.QueryLexer.lexText;if(r.match(t.QueryLexer.termSeparator))return t.QueryLexer.lexTerm}},t.QueryParser=function(e,r){this.lexer=new t.QueryLexer(e),this.query=r,this.currentClause={},this.lexemeIdx=0},t.QueryParser.prototype.parse=function(){this.lexer.run(),this.lexemes=this.lexer.lexemes;for(var e=t.QueryParser.parseClause;e;)e=e(this);return this.query},t.QueryParser.prototype.peekLexeme=function(){return this.lexemes[this.lexemeIdx]},t.QueryParser.prototype.consumeLexeme=function(){var e=this.peekLexeme();return this.lexemeIdx+=1,e},t.QueryParser.prototype.nextClause=function(){var e=this.currentClause;this.query.clause(e),this.currentClause={}},t.QueryParser.parseClause=function(e){var r=e.peekLexeme();if(r!=null)switch(r.type){case t.QueryLexer.PRESENCE:return t.QueryParser.parsePresence;case t.QueryLexer.FIELD:return t.QueryParser.parseField;case t.QueryLexer.TERM:return t.QueryParser.parseTerm;default:var n="expected either a field or a term, found "+r.type;throw r.str.length>=1&&(n+=" with value '"+r.str+"'"),new t.QueryParseError(n,r.start,r.end)}},t.QueryParser.parsePresence=function(e){var r=e.consumeLexeme();if(r!=null){switch(r.str){case"-":e.currentClause.presence=t.Query.presence.PROHIBITED;break;case"+":e.currentClause.presence=t.Query.presence.REQUIRED;break;default:var n="unrecognised presence operator'"+r.str+"'";throw new t.QueryParseError(n,r.start,r.end)}var i=e.peekLexeme();if(i==null){var n="expecting term or field, found nothing";throw new t.QueryParseError(n,r.start,r.end)}switch(i.type){case t.QueryLexer.FIELD:return t.QueryParser.parseField;case t.QueryLexer.TERM:return t.QueryParser.parseTerm;default:var n="expecting term or field, found '"+i.type+"'";throw new t.QueryParseError(n,i.start,i.end)}}},t.QueryParser.parseField=function(e){var r=e.consumeLexeme();if(r!=null){if(e.query.allFields.indexOf(r.str)==-1){var n=e.query.allFields.map(function(o){return"'"+o+"'"}).join(", "),i="unrecognised field '"+r.str+"', possible fields: "+n;throw new t.QueryParseError(i,r.start,r.end)}e.currentClause.fields=[r.str];var s=e.peekLexeme();if(s==null){var i="expecting term, found nothing";throw new t.QueryParseError(i,r.start,r.end)}switch(s.type){case t.QueryLexer.TERM:return t.QueryParser.parseTerm;default:var i="expecting term, found '"+s.type+"'";throw new t.QueryParseError(i,s.start,s.end)}}},t.QueryParser.parseTerm=function(e){var r=e.consumeLexeme();if(r!=null){e.currentClause.term=r.str.toLowerCase(),r.str.indexOf("*")!=-1&&(e.currentClause.usePipeline=!1);var n=e.peekLexeme();if(n==null){e.nextClause();return}switch(n.type){case t.QueryLexer.TERM:return e.nextClause(),t.QueryParser.parseTerm;case t.QueryLexer.FIELD:return e.nextClause(),t.QueryParser.parseField;case t.QueryLexer.EDIT_DISTANCE:return t.QueryParser.parseEditDistance;case t.QueryLexer.BOOST:return t.QueryParser.parseBoost;case t.QueryLexer.PRESENCE:return e.nextClause(),t.QueryParser.parsePresence;default:var i="Unexpected lexeme type '"+n.type+"'";throw new t.QueryParseError(i,n.start,n.end)}}},t.QueryParser.parseEditDistance=function(e){var r=e.consumeLexeme();if(r!=null){var n=parseInt(r.str,10);if(isNaN(n)){var i="edit distance must be numeric";throw new t.QueryParseError(i,r.start,r.end)}e.currentClause.editDistance=n;var s=e.peekLexeme();if(s==null){e.nextClause();return}switch(s.type){case t.QueryLexer.TERM:return e.nextClause(),t.QueryParser.parseTerm;case t.QueryLexer.FIELD:return e.nextClause(),t.QueryParser.parseField;case t.QueryLexer.EDIT_DISTANCE:return t.QueryParser.parseEditDistance;case t.QueryLexer.BOOST:return t.QueryParser.parseBoost;case t.QueryLexer.PRESENCE:return e.nextClause(),t.QueryParser.parsePresence;default:var i="Unexpected lexeme type '"+s.type+"'";throw new t.QueryParseError(i,s.start,s.end)}}},t.QueryParser.parseBoost=function(e){var r=e.consumeLexeme();if(r!=null){var n=parseInt(r.str,10);if(isNaN(n)){var i="boost must be numeric";throw new t.QueryParseError(i,r.start,r.end)}e.currentClause.boost=n;var s=e.peekLexeme();if(s==null){e.nextClause();return}switch(s.type){case t.QueryLexer.TERM:return e.nextClause(),t.QueryParser.parseTerm;case t.QueryLexer.FIELD:return e.nextClause(),t.QueryParser.parseField;case t.QueryLexer.EDIT_DISTANCE:return t.QueryParser.parseEditDistance;case t.QueryLexer.BOOST:return t.QueryParser.parseBoost;case t.QueryLexer.PRESENCE:return e.nextClause(),t.QueryParser.parsePresence;default:var i="Unexpected lexeme type '"+s.type+"'";throw new t.QueryParseError(i,s.start,s.end)}}},function(e,r){typeof define=="function"&&define.amd?define(r):typeof de=="object"?fe.exports=r():e.lunr=r()}(this,function(){return t})})()});var ce=[];function N(t,e){ce.push({selector:e,constructor:t})}var Y=class{constructor(){this.createComponents(document.body)}createComponents(e){ce.forEach(r=>{e.querySelectorAll(r.selector).forEach(n=>{n.dataset.hasInstance||(new r.constructor({el:n}),n.dataset.hasInstance=String(!0))})})}};var k=class{constructor(e){this.el=e.el}};var J=class{constructor(){this.listeners={}}addEventListener(e,r){e in this.listeners||(this.listeners[e]=[]),this.listeners[e].push(r)}removeEventListener(e,r){if(!(e in this.listeners))return;let n=this.listeners[e];for(let i=0,s=n.length;i<s;i++)if(n[i]===r){n.splice(i,1);return}}dispatchEvent(e){if(!(e.type in this.listeners))return!0;let r=this.listeners[e.type].slice();for(let n=0,i=r.length;n<i;n++)r[n].call(this,e);return!e.defaultPrevented}};var ne=(t,e=100)=>{let r=Date.now();return(...n)=>{r+e-Date.now()<0&&(t(...n),r=Date.now())}};var ie=class extends J{constructor(){super();this.scrollTop=0;this.lastY=0;this.width=0;this.height=0;this.showToolbar=!0;this.toolbar=document.querySelector(".tsd-page-toolbar"),this.secondaryNav=document.querySelector(".tsd-navigation.secondary"),window.addEventListener("scroll",ne(()=>this.onScroll(),10)),window.addEventListener("resize",ne(()=>this.onResize(),10)),this.onResize(),this.onScroll()}triggerResize(){let r=new CustomEvent("resize",{detail:{width:this.width,height:this.height}});this.dispatchEvent(r)}onResize(){this.width=window.innerWidth||0,this.height=window.innerHeight||0;let r=new CustomEvent("resize",{detail:{width:this.width,height:this.height}});this.dispatchEvent(r)}onScroll(){this.scrollTop=window.scrollY||0;let r=new CustomEvent("scroll",{detail:{scrollTop:this.scrollTop}});this.dispatchEvent(r),this.hideShowToolbar()}hideShowToolbar(){var n;let r=this.showToolbar;this.showToolbar=this.lastY>=this.scrollTop||this.scrollTop<=0,r!==this.showToolbar&&(this.toolbar.classList.toggle("tsd-page-toolbar--hide"),(n=this.secondaryNav)==null||n.classList.toggle("tsd-navigation--toolbar-hide")),this.lastY=this.scrollTop}},Q=ie;Q.instance=new ie;var X=class extends k{constructor(r){super(r);this.anchors=[];this.index=-1;Q.instance.addEventListener("resize",()=>this.onResize()),Q.instance.addEventListener("scroll",n=>this.onScroll(n)),this.createAnchors()}createAnchors(){let r=window.location.href;r.indexOf("#")!=-1&&(r=r.substr(0,r.indexOf("#"))),this.el.querySelectorAll("a").forEach(n=>{let i=n.href;if(i.indexOf("#")==-1||i.substr(0,r.length)!=r)return;let s=i.substr(i.indexOf("#")+1),o=document.querySelector("a.tsd-anchor[name="+s+"]"),a=n.parentNode;!o||!a||this.anchors.push({link:a,anchor:o,position:0})}),this.onResize()}onResize(){let r;for(let i=0,s=this.anchors.length;i<s;i++){r=this.anchors[i];let o=r.anchor.getBoundingClientRect();r.position=o.top+document.body.scrollTop}this.anchors.sort((i,s)=>i.position-s.position);let n=new CustomEvent("scroll",{detail:{scrollTop:Q.instance.scrollTop}});this.onScroll(n)}onScroll(r){let n=r.detail.scrollTop+5,i=this.anchors,s=i.length-1,o=this.index;for(;o>-1&&i[o].position>n;)o-=1;for(;o<s&&i[o+1].position<n;)o+=1;this.index!=o&&(this.index>-1&&this.anchors[this.index].link.classList.remove("focus"),this.index=o,this.index>-1&&this.anchors[this.index].link.classList.add("focus"))}};var he=(t,e=100)=>{let r;return(...n)=>{clearTimeout(r),r=setTimeout(()=>t(n),e)}};var ge=Fe(pe());function ye(){let t=document.getElementById("tsd-search");if(!t)return;let e=document.getElementById("search-script");t.classList.add("loading"),e&&(e.addEventListener("error",()=>{t.classList.remove("loading"),t.classList.add("failure")}),e.addEventListener("load",()=>{t.classList.remove("loading"),t.classList.add("ready")}),window.searchData&&t.classList.remove("loading"));let r=document.querySelector("#tsd-search input"),n=document.querySelector("#tsd-search .results");if(!r||!n)throw new Error("The input field or the result list wrapper was not found");let i=!1;n.addEventListener("mousedown",()=>i=!0),n.addEventListener("mouseup",()=>{i=!1,t.classList.remove("has-focus")}),r.addEventListener("focus",()=>t.classList.add("has-focus")),r.addEventListener("blur",()=>{i||(i=!1,t.classList.remove("has-focus"))});let s={base:t.dataset.base+"/"};Ae(t,n,r,s)}function Ae(t,e,r,n){r.addEventListener("input",he(()=>{He(t,e,r,n)},200));let i=!1;r.addEventListener("keydown",s=>{i=!0,s.key=="Enter"?ze(e,r):s.key=="Escape"?r.blur():s.key=="ArrowUp"?me(e,-1):s.key==="ArrowDown"?me(e,1):i=!1}),r.addEventListener("keypress",s=>{i&&s.preventDefault()}),document.body.addEventListener("keydown",s=>{s.altKey||s.ctrlKey||s.metaKey||!r.matches(":focus")&&s.key==="/"&&(r.focus(),s.preventDefault())})}function Ve(t,e){t.index||window.searchData&&(e.classList.remove("loading"),e.classList.add("ready"),t.data=window.searchData,t.index=ge.Index.load(window.searchData.index))}function He(t,e,r,n){if(Ve(n,t),!n.index||!n.data)return;e.textContent="";let i=r.value.trim(),s=i?n.index.search(`*${i}*`):[];for(let o=0,a=Math.min(10,s.length);o<a;o++){let u=n.data.rows[Number(s[o].ref)],l=ve(u.name,i);u.parent&&(l=`<span class="parent">${ve(u.parent,i)}.</span>${l}`);let h=document.createElement("li");h.classList.value=u.classes;let p=document.createElement("a");p.href=n.base+u.url,p.classList.add("tsd-kind-icon"),p.innerHTML=l,h.append(p),e.appendChild(h)}}function me(t,e){let r=t.querySelector(".current");if(!r)r=t.querySelector(e==1?"li:first-child":"li:last-child"),r&&r.classList.add("current");else{let n=r;if(e===1)do n=n.nextElementSibling;while(n instanceof HTMLElement&&n.offsetParent==null);else do n=n.previousElementSibling;while(n instanceof HTMLElement&&n.offsetParent==null);n&&(r.classList.remove("current"),n.classList.add("current"))}}function ze(t,e){let r=t.querySelector(".current");if(r||(r=t.querySelector("li:first-child")),r){let n=r.querySelector("a");n&&(window.location.href=n.href),e.blur()}}function ve(t,e){if(e==="")return t;let r=t.toLocaleLowerCase(),n=e.toLocaleLowerCase(),i=[],s=0,o=r.indexOf(n);for(;o!=-1;)i.push(se(t.substring(s,o)),`<b>${se(t.substring(o,o+n.length))}</b>`),s=o+n.length,o=r.indexOf(n,s);return i.push(se(t.substring(s))),i.join("")}var Ne={"&":"&amp;","<":"&lt;",">":"&gt;","'":"&#039;",'"':"&quot;"};function se(t){return t.replace(/[&<>"'"]/g,e=>Ne[e])}var oe=class{constructor(e,r){this.signature=e,this.description=r}addClass(e){return this.signature.classList.add(e),this.description.classList.add(e),this}removeClass(e){return this.signature.classList.remove(e),this.description.classList.remove(e),this}},Z=class extends k{constructor(r){super(r);this.groups=[];this.index=-1;this.createGroups(),this.container&&(this.el.classList.add("active"),Array.from(this.el.children).forEach(n=>{n.addEventListener("touchstart",i=>this.onClick(i)),n.addEventListener("click",i=>this.onClick(i))}),this.container.classList.add("active"),this.setIndex(0))}setIndex(r){if(r<0&&(r=0),r>this.groups.length-1&&(r=this.groups.length-1),this.index==r)return;let n=this.groups[r];if(this.index>-1){let i=this.groups[this.index];i.removeClass("current").addClass("fade-out"),n.addClass("current"),n.addClass("fade-in"),Q.instance.triggerResize(),setTimeout(()=>{i.removeClass("fade-out"),n.removeClass("fade-in")},300)}else n.addClass("current"),Q.instance.triggerResize();this.index=r}createGroups(){let r=this.el.children;if(r.length<2)return;this.container=this.el.nextElementSibling;let n=this.container.children;this.groups=[];for(let i=0;i<r.length;i++)this.groups.push(new oe(r[i],n[i]))}onClick(r){this.groups.forEach((n,i)=>{n.signature===r.currentTarget&&this.setIndex(i)})}};var C="mousedown",Le="mousemove",_="mouseup",K={x:0,y:0},xe=!1,ae=!1,je=!1,A=!1,Ee=/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);document.documentElement.classList.add(Ee?"is-mobile":"not-mobile");Ee&&"ontouchstart"in document.documentElement&&(je=!0,C="touchstart",Le="touchmove",_="touchend");document.addEventListener(C,t=>{ae=!0,A=!1;let e=C=="touchstart"?t.targetTouches[0]:t;K.y=e.pageY||0,K.x=e.pageX||0});document.addEventListener(Le,t=>{if(!!ae&&!A){let e=C=="touchstart"?t.targetTouches[0]:t,r=K.x-(e.pageX||0),n=K.y-(e.pageY||0);A=Math.sqrt(r*r+n*n)>10}});document.addEventListener(_,()=>{ae=!1});document.addEventListener("click",t=>{xe&&(t.preventDefault(),t.stopImmediatePropagation(),xe=!1)});var ee=class extends k{constructor(r){super(r);this.className=this.el.dataset.toggle||"",this.el.addEventListener(_,n=>this.onPointerUp(n)),this.el.addEventListener("click",n=>n.preventDefault()),document.addEventListener(C,n=>this.onDocumentPointerDown(n)),document.addEventListener(_,n=>this.onDocumentPointerUp(n))}setActive(r){if(this.active==r)return;this.active=r,document.documentElement.classList.toggle("has-"+this.className,r),this.el.classList.toggle("active",r);let n=(this.active?"to-has-":"from-has-")+this.className;document.documentElement.classList.add(n),setTimeout(()=>document.documentElement.classList.remove(n),500)}onPointerUp(r){A||(this.setActive(!0),r.preventDefault())}onDocumentPointerDown(r){if(this.active){if(r.target.closest(".col-menu, .tsd-filter-group"))return;this.setActive(!1)}}onDocumentPointerUp(r){if(!A&&this.active&&r.target.closest(".col-menu")){let n=r.target.closest("a");if(n){let i=window.location.href;i.indexOf("#")!=-1&&(i=i.substr(0,i.indexOf("#"))),n.href.substr(0,i.length)==i&&setTimeout(()=>this.setActive(!1),250)}}}};var te=class{constructor(e,r){this.key=e,this.value=r,this.defaultValue=r,this.initialize(),window.localStorage[this.key]&&this.setValue(this.fromLocalStorage(window.localStorage[this.key]))}initialize(){}setValue(e){if(this.value==e)return;let r=this.value;this.value=e,window.localStorage[this.key]=this.toLocalStorage(e),this.handleValueChange(r,e)}},re=class extends te{initialize(){let r=document.querySelector("#tsd-filter-"+this.key);!r||(this.checkbox=r,this.checkbox.addEventListener("change",()=>{this.setValue(this.checkbox.checked)}))}handleValueChange(r,n){!this.checkbox||(this.checkbox.checked=this.value,document.documentElement.classList.toggle("toggle-"+this.key,this.value!=this.defaultValue))}fromLocalStorage(r){return r=="true"}toLocalStorage(r){return r?"true":"false"}},le=class extends te{initialize(){document.documentElement.classList.add("toggle-"+this.key+this.value);let r=document.querySelector("#tsd-filter-"+this.key);if(!r)return;this.select=r;let n=()=>{this.select.classList.add("active")},i=()=>{this.select.classList.remove("active")};this.select.addEventListener(C,n),this.select.addEventListener("mouseover",n),this.select.addEventListener("mouseleave",i),this.select.querySelectorAll("li").forEach(s=>{s.addEventListener(_,o=>{r.classList.remove("active"),this.setValue(o.target.dataset.value||"")})}),document.addEventListener(C,s=>{this.select.contains(s.target)||this.select.classList.remove("active")})}handleValueChange(r,n){this.select.querySelectorAll("li.selected").forEach(o=>{o.classList.remove("selected")});let i=this.select.querySelector('li[data-value="'+n+'"]'),s=this.select.querySelector(".tsd-select-label");i&&s&&(i.classList.add("selected"),s.textContent=i.textContent),document.documentElement.classList.remove("toggle-"+r),document.documentElement.classList.add("toggle-"+n)}fromLocalStorage(r){return r}toLocalStorage(r){return r}},j=class extends k{constructor(r){super(r);this.optionVisibility=new le("visibility","private"),this.optionInherited=new re("inherited",!0),this.optionExternals=new re("externals",!0)}static isSupported(){try{return typeof window.localStorage!="undefined"}catch{return!1}}};function we(t){let e=localStorage.getItem("tsd-theme")||"os";t.value=e,be(e),t.addEventListener("change",()=>{localStorage.setItem("tsd-theme",t.value),be(t.value)})}function be(t){switch(t){case"os":document.body.classList.remove("light","dark");break;case"light":document.body.classList.remove("dark"),document.body.classList.add("light");break;case"dark":document.body.classList.remove("light"),document.body.classList.add("dark");break}}ye();N(X,".menu-highlight");N(Z,".tsd-signatures");N(ee,"a[data-toggle]");j.isSupported()?N(j,"#tsd-filter"):document.documentElement.classList.add("no-filter");var Te=document.getElementById("theme");Te&&we(Te);var Be=new Y;Object.defineProperty(window,"app",{value:Be});})();
/*!
 * lunr.Builder
 * Copyright (C) 2020 Oliver Nightingale
 */
/*!
 * lunr.Index
 * Copyright (C) 2020 Oliver Nightingale
 */
/*!
 * lunr.Pipeline
 * Copyright (C) 2020 Oliver Nightingale
 */
/*!
 * lunr.Set
 * Copyright (C) 2020 Oliver Nightingale
 */
/*!
 * lunr.TokenSet
 * Copyright (C) 2020 Oliver Nightingale
 */
/*!
 * lunr.Vector
 * Copyright (C) 2020 Oliver Nightingale
 */
/*!
 * lunr.stemmer
 * Copyright (C) 2020 Oliver Nightingale
 * Includes code from - http://tartarus.org/~martin/PorterStemmer/js.txt
 */
/*!
 * lunr.stopWordFilter
 * Copyright (C) 2020 Oliver Nightingale
 */
/*!
 * lunr.tokenizer
 * Copyright (C) 2020 Oliver Nightingale
 */
/*!
 * lunr.trimmer
 * Copyright (C) 2020 Oliver Nightingale
 */
/*!
 * lunr.utils
 * Copyright (C) 2020 Oliver Nightingale
 */
/**
 * lunr - http://lunrjs.com - A bit like Solr, but much smaller and not as bright - 2.3.9
 * Copyright (C) 2020 Oliver Nightingale
 * @license MIT
 */


================================================================================
File: docs\assets\style.css
Size: 34.28 kB
================================================================================

@import url("./icons.css");

:root {
    /* Light */
    --light-color-background: #fcfcfc;
    --light-color-secondary-background: #fff;
    --light-color-text: #222;
    --light-color-text-aside: #707070;
    --light-color-link: #4da6ff;
    --light-color-menu-divider: #eee;
    --light-color-menu-divider-focus: #000;
    --light-color-menu-label: #707070;
    --light-color-panel: var(--light-color-secondary-background);
    --light-color-panel-divider: #eee;
    --light-color-comment-tag: #707070;
    --light-color-comment-tag-text: #fff;
    --light-color-ts: #9600ff;
    --light-color-ts-interface: #647f1b;
    --light-color-ts-enum: #937210;
    --light-color-ts-class: #0672de;
    --light-color-ts-private: #707070;
    --light-color-toolbar: #fff;
    --light-color-toolbar-text: #333;
    --light-icon-filter: invert(0);
    --light-external-icon: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100' width='10' height='10'><path fill-opacity='0' stroke='%23000' stroke-width='10' d='m43,35H5v60h60V57M45,5v10l10,10-30,30 20,20 30-30 10,10h10V5z'/></svg>");

    /* Dark */
    --dark-color-background: #36393f;
    --dark-color-secondary-background: #2f3136;
    --dark-color-text: #ffffff;
    --dark-color-text-aside: #e6e4e4;
    --dark-color-link: #00aff4;
    --dark-color-menu-divider: #eee;
    --dark-color-menu-divider-focus: #000;
    --dark-color-menu-label: #707070;
    --dark-color-panel: var(--dark-color-secondary-background);
    --dark-color-panel-divider: #818181;
    --dark-color-comment-tag: #dcddde;
    --dark-color-comment-tag-text: #2f3136;
    --dark-color-ts: #c97dff;
    --dark-color-ts-interface: #9cbe3c;
    --dark-color-ts-enum: #d6ab29;
    --dark-color-ts-class: #3695f3;
    --dark-color-ts-private: #e2e2e2;
    --dark-color-toolbar: #34373c;
    --dark-color-toolbar-text: #ffffff;
    --dark-icon-filter: invert(1);
    --dark-external-icon: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100' width='10' height='10'><path fill-opacity='0' stroke='%23fff' stroke-width='10' d='m43,35H5v60h60V57M45,5v10l10,10-30,30 20,20 30-30 10,10h10V5z'/></svg>");
}

@media (prefers-color-scheme: light) {
    :root {
        --color-background: var(--light-color-background);
        --color-secondary-background: var(--light-color-secondary-background);
        --color-text: var(--light-color-text);
        --color-text-aside: var(--light-color-text-aside);
        --color-link: var(--light-color-link);
        --color-menu-divider: var(--light-color-menu-divider);
        --color-menu-divider-focus: var(--light-color-menu-divider-focus);
        --color-menu-label: var(--light-color-menu-label);
        --color-panel: var(--light-color-panel);
        --color-panel-divider: var(--light-color-panel-divider);
        --color-comment-tag: var(--light-color-comment-tag);
        --color-comment-tag-text: var(--light-color-comment-tag-text);
        --color-ts: var(--light-color-ts);
        --color-ts-interface: var(--light-color-ts-interface);
        --color-ts-enum: var(--light-color-ts-enum);
        --color-ts-class: var(--light-color-ts-class);
        --color-ts-private: var(--light-color-ts-private);
        --color-toolbar: var(--light-color-toolbar);
        --color-toolbar-text: var(--light-color-toolbar-text);
        --icon-filter: var(--light-icon-filter);
        --external-icon: var(--light-external-icon);
    }
}

@media (prefers-color-scheme: dark) {
    :root {
        --color-background: var(--dark-color-background);
        --color-secondary-background: var(--dark-color-secondary-background);
        --color-text: var(--dark-color-text);
        --color-text-aside: var(--dark-color-text-aside);
        --color-link: var(--dark-color-link);
        --color-menu-divider: var(--dark-color-menu-divider);
        --color-menu-divider-focus: var(--dark-color-menu-divider-focus);
        --color-menu-label: var(--dark-color-menu-label);
        --color-panel: var(--dark-color-panel);
        --color-panel-divider: var(--dark-color-panel-divider);
        --color-comment-tag: var(--dark-color-comment-tag);
        --color-comment-tag-text: var(--dark-color-comment-tag-text);
        --color-ts: var(--dark-color-ts);
        --color-ts-interface: var(--dark-color-ts-interface);
        --color-ts-enum: var(--dark-color-ts-enum);
        --color-ts-class: var(--dark-color-ts-class);
        --color-ts-private: var(--dark-color-ts-private);
        --color-toolbar: var(--dark-color-toolbar);
        --color-toolbar-text: var(--dark-color-toolbar-text);
        --icon-filter: var(--dark-icon-filter);
        --external-icon: var(--dark-external-icon);
    }
}

body {
    margin: 0;
}

body.light {
    --color-background: var(--light-color-background);
    --color-secondary-background: var(--light-color-secondary-background);
    --color-text: var(--light-color-text);
    --color-text-aside: var(--light-color-text-aside);
    --color-link: var(--light-color-link);
    --color-menu-divider: var(--light-color-menu-divider);
    --color-menu-divider-focus: var(--light-color-menu-divider-focus);
    --color-menu-label: var(--light-color-menu-label);
    --color-panel: var(--light-color-panel);
    --color-panel-divider: var(--light-color-panel-divider);
    --color-comment-tag: var(--light-color-comment-tag);
    --color-comment-tag-text: var(--light-color-comment-tag-text);
    --color-ts: var(--light-color-ts);
    --color-ts-interface: var(--light-color-ts-interface);
    --color-ts-enum: var(--light-color-ts-enum);
    --color-ts-class: var(--light-color-ts-class);
    --color-ts-private: var(--light-color-ts-private);
    --color-toolbar: var(--light-color-toolbar);
    --color-toolbar-text: var(--light-color-toolbar-text);
    --icon-filter: var(--light-icon-filter);
    --external-icon: var(--light-external-icon);
}

body.dark {
    --color-background: var(--dark-color-background);
    --color-secondary-background: var(--dark-color-secondary-background);
    --color-text: var(--dark-color-text);
    --color-text-aside: var(--dark-color-text-aside);
    --color-link: var(--dark-color-link);
    --color-menu-divider: var(--dark-color-menu-divider);
    --color-menu-divider-focus: var(--dark-color-menu-divider-focus);
    --color-menu-label: var(--dark-color-menu-label);
    --color-panel: var(--dark-color-panel);
    --color-panel-divider: var(--dark-color-panel-divider);
    --color-comment-tag: var(--dark-color-comment-tag);
    --color-comment-tag-text: var(--dark-color-comment-tag-text);
    --color-ts: var(--dark-color-ts);
    --color-ts-interface: var(--dark-color-ts-interface);
    --color-ts-enum: var(--dark-color-ts-enum);
    --color-ts-class: var(--dark-color-ts-class);
    --color-ts-private: var(--dark-color-ts-private);
    --color-toolbar: var(--dark-color-toolbar);
    --color-toolbar-text: var(--dark-color-toolbar-text);
    --icon-filter: var(--dark-icon-filter);
    --external-icon: var(--dark-external-icon);
}

h1,
h2,
h3,
h4,
h5,
h6 {
    line-height: 1.2;
}

h1 {
    font-size: 2em;
    margin: 0.67em 0;
}

h2 {
    font-size: 1.5em;
    margin: 0.83em 0;
}

h3 {
    font-size: 1.17em;
    margin: 1em 0;
}

h4,
.tsd-index-panel h3 {
    font-size: 1em;
    margin: 1.33em 0;
}

h5 {
    font-size: 0.83em;
    margin: 1.67em 0;
}

h6 {
    font-size: 0.67em;
    margin: 2.33em 0;
}

pre {
    white-space: pre;
    white-space: pre-wrap;
    word-wrap: break-word;
}

dl,
menu,
ol,
ul {
    margin: 1em 0;
}

dd {
    margin: 0 0 0 40px;
}

.container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 40px;
}
@media (max-width: 640px) {
    .container {
        padding: 0 20px;
    }
}

.container-main {
    padding-bottom: 200px;
}

.row {
    display: flex;
    position: relative;
    margin: 0 -10px;
}
.row:after {
    visibility: hidden;
    display: block;
    content: "";
    clear: both;
    height: 0;
}

.col-4,
.col-8 {
    box-sizing: border-box;
    float: left;
    padding: 0 10px;
}

.col-4 {
    width: 33.3333333333%;
}
.col-8 {
    width: 66.6666666667%;
}

ul.tsd-descriptions > li > :first-child,
.tsd-panel > :first-child,
.col-8 > :first-child,
.col-4 > :first-child,
ul.tsd-descriptions > li > :first-child > :first-child,
.tsd-panel > :first-child > :first-child,
.col-8 > :first-child > :first-child,
.col-4 > :first-child > :first-child,
ul.tsd-descriptions > li > :first-child > :first-child > :first-child,
.tsd-panel > :first-child > :first-child > :first-child,
.col-8 > :first-child > :first-child > :first-child,
.col-4 > :first-child > :first-child > :first-child {
    margin-top: 0;
}
ul.tsd-descriptions > li > :last-child,
.tsd-panel > :last-child,
.col-8 > :last-child,
.col-4 > :last-child,
ul.tsd-descriptions > li > :last-child > :last-child,
.tsd-panel > :last-child > :last-child,
.col-8 > :last-child > :last-child,
.col-4 > :last-child > :last-child,
ul.tsd-descriptions > li > :last-child > :last-child > :last-child,
.tsd-panel > :last-child > :last-child > :last-child,
.col-8 > :last-child > :last-child > :last-child,
.col-4 > :last-child > :last-child > :last-child {
    margin-bottom: 0;
}

@keyframes fade-in {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}
@keyframes fade-out {
    from {
        opacity: 1;
        visibility: visible;
    }
    to {
        opacity: 0;
    }
}
@keyframes fade-in-delayed {
    0% {
        opacity: 0;
    }
    33% {
        opacity: 0;
    }
    100% {
        opacity: 1;
    }
}
@keyframes fade-out-delayed {
    0% {
        opacity: 1;
        visibility: visible;
    }
    66% {
        opacity: 0;
    }
    100% {
        opacity: 0;
    }
}
@keyframes shift-to-left {
    from {
        transform: translate(0, 0);
    }
    to {
        transform: translate(-25%, 0);
    }
}
@keyframes unshift-to-left {
    from {
        transform: translate(-25%, 0);
    }
    to {
        transform: translate(0, 0);
    }
}
@keyframes pop-in-from-right {
    from {
        transform: translate(100%, 0);
    }
    to {
        transform: translate(0, 0);
    }
}
@keyframes pop-out-to-right {
    from {
        transform: translate(0, 0);
        visibility: visible;
    }
    to {
        transform: translate(100%, 0);
    }
}
body {
    background: var(--color-background);
    font-family: "Segoe UI", sans-serif;
    font-size: 16px;
    color: var(--color-text);
}

a {
    color: var(--color-link);
    text-decoration: none;
}
a:hover {
    text-decoration: underline;
}
a.external[target="_blank"] {
    background-image: var(--external-icon);
    background-position: top 3px right;
    background-repeat: no-repeat;
    padding-right: 13px;
}

code,
pre {
    font-family: Menlo, Monaco, Consolas, "Courier New", monospace;
    padding: 0.2em;
    margin: 0;
    font-size: 14px;
}

pre {
    padding: 10px;
}
pre code {
    padding: 0;
    font-size: 100%;
}

blockquote {
    margin: 1em 0;
    padding-left: 1em;
    border-left: 4px solid gray;
}

.tsd-typography {
    line-height: 1.333em;
}
.tsd-typography ul {
    list-style: square;
    padding: 0 0 0 20px;
    margin: 0;
}
.tsd-typography h4,
.tsd-typography .tsd-index-panel h3,
.tsd-index-panel .tsd-typography h3,
.tsd-typography h5,
.tsd-typography h6 {
    font-size: 1em;
    margin: 0;
}
.tsd-typography h5,
.tsd-typography h6 {
    font-weight: normal;
}
.tsd-typography p,
.tsd-typography ul,
.tsd-typography ol {
    margin: 1em 0;
}

@media (min-width: 901px) and (max-width: 1024px) {
    html .col-content {
        width: 72%;
    }
    html .col-menu {
        width: 28%;
    }
    html .tsd-navigation {
        padding-left: 10px;
    }
}
@media (max-width: 900px) {
    html .col-content {
        float: none;
        width: 100%;
    }
    html .col-menu {
        position: fixed !important;
        overflow: auto;
        -webkit-overflow-scrolling: touch;
        z-index: 1024;
        top: 0 !important;
        bottom: 0 !important;
        left: auto !important;
        right: 0 !important;
        width: 100%;
        padding: 20px 20px 0 0;
        max-width: 450px;
        visibility: hidden;
        background-color: var(--color-panel);
        transform: translate(100%, 0);
    }
    html .col-menu > *:last-child {
        padding-bottom: 20px;
    }
    html .overlay {
        content: "";
        display: block;
        position: fixed;
        z-index: 1023;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(0, 0, 0, 0.75);
        visibility: hidden;
    }

    .to-has-menu .overlay {
        animation: fade-in 0.4s;
    }

    .to-has-menu :is(header, footer, .col-content) {
        animation: shift-to-left 0.4s;
    }

    .to-has-menu .col-menu {
        animation: pop-in-from-right 0.4s;
    }

    .from-has-menu .overlay {
        animation: fade-out 0.4s;
    }

    .from-has-menu :is(header, footer, .col-content) {
        animation: unshift-to-left 0.4s;
    }

    .from-has-menu .col-menu {
        animation: pop-out-to-right 0.4s;
    }

    .has-menu body {
        overflow: hidden;
    }
    .has-menu .overlay {
        visibility: visible;
    }
    .has-menu :is(header, footer, .col-content) {
        transform: translate(-25%, 0);
    }
    .has-menu .col-menu {
        visibility: visible;
        transform: translate(0, 0);
        display: grid;
        grid-template-rows: auto 1fr;
        max-height: 100vh;
    }
    .has-menu .tsd-navigation {
        max-height: 100%;
    }
}

.tsd-page-title {
    padding: 70px 0 20px 0;
    margin: 0 0 40px 0;
    background: var(--color-panel);
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.35);
}
.tsd-page-title h1 {
    margin: 0;
}

.tsd-breadcrumb {
    margin: 0;
    padding: 0;
    color: var(--color-text-aside);
}
.tsd-breadcrumb a {
    color: var(--color-text-aside);
    text-decoration: none;
}
.tsd-breadcrumb a:hover {
    text-decoration: underline;
}
.tsd-breadcrumb li {
    display: inline;
}
.tsd-breadcrumb li:after {
    content: " / ";
}

dl.tsd-comment-tags {
    overflow: hidden;
}
dl.tsd-comment-tags dt {
    float: left;
    padding: 1px 5px;
    margin: 0 10px 0 0;
    border-radius: 4px;
    border: 1px solid var(--color-comment-tag);
    color: var(--color-comment-tag);
    font-size: 0.8em;
    font-weight: normal;
}
dl.tsd-comment-tags dd {
    margin: 0 0 10px 0;
}
dl.tsd-comment-tags dd:before,
dl.tsd-comment-tags dd:after {
    display: table;
    content: " ";
}
dl.tsd-comment-tags dd pre,
dl.tsd-comment-tags dd:after {
    clear: both;
}
dl.tsd-comment-tags p {
    margin: 0;
}

.tsd-panel.tsd-comment .lead {
    font-size: 1.1em;
    line-height: 1.333em;
    margin-bottom: 2em;
}
.tsd-panel.tsd-comment .lead:last-child {
    margin-bottom: 0;
}

.toggle-protected .tsd-is-private {
    display: none;
}

.toggle-public .tsd-is-private,
.toggle-public .tsd-is-protected,
.toggle-public .tsd-is-private-protected {
    display: none;
}

.toggle-inherited .tsd-is-inherited {
    display: none;
}

.toggle-externals .tsd-is-external {
    display: none;
}

#tsd-filter {
    position: relative;
    display: inline-block;
    height: 40px;
    vertical-align: bottom;
}
.no-filter #tsd-filter {
    display: none;
}
#tsd-filter .tsd-filter-group {
    display: inline-block;
    height: 40px;
    vertical-align: bottom;
    white-space: nowrap;
}
#tsd-filter input {
    display: none;
}
@media (max-width: 900px) {
    #tsd-filter .tsd-filter-group {
        display: block;
        position: absolute;
        top: 40px;
        right: 20px;
        height: auto;
        background-color: var(--color-panel);
        visibility: hidden;
        transform: translate(50%, 0);
        box-shadow: 0 0 4px rgba(0, 0, 0, 0.25);
    }
    .has-options #tsd-filter .tsd-filter-group {
        visibility: visible;
    }
    .to-has-options #tsd-filter .tsd-filter-group {
        animation: fade-in 0.2s;
    }
    .from-has-options #tsd-filter .tsd-filter-group {
        animation: fade-out 0.2s;
    }
    #tsd-filter label,
    #tsd-filter .tsd-select {
        display: block;
        padding-right: 20px;
    }
}

footer {
    border-top: 1px solid var(--color-panel-divider);
    background-color: var(--color-panel);
}
footer:after {
    content: "";
    display: table;
}
footer.with-border-bottom {
    border-bottom: 1px solid var(--color-panel-divider);
}
footer .tsd-legend-group {
    font-size: 0;
}
footer .tsd-legend {
    display: inline-block;
    width: 25%;
    padding: 0;
    font-size: 16px;
    list-style: none;
    line-height: 1.333em;
    vertical-align: top;
}
@media (max-width: 900px) {
    footer .tsd-legend {
        width: 50%;
    }
}

.tsd-hierarchy {
    list-style: square;
    padding: 0 0 0 20px;
    margin: 0;
}
.tsd-hierarchy .target {
    font-weight: bold;
}

.tsd-index-panel .tsd-index-content {
    margin-bottom: -30px !important;
}
.tsd-index-panel .tsd-index-section {
    margin-bottom: 30px !important;
}
.tsd-index-panel h3 {
    margin: 0 -20px 10px -20px;
    padding: 0 20px 10px 20px;
    border-bottom: 1px solid var(--color-panel-divider);
}
.tsd-index-panel ul.tsd-index-list {
    -webkit-column-count: 3;
    -moz-column-count: 3;
    -ms-column-count: 3;
    -o-column-count: 3;
    column-count: 3;
    -webkit-column-gap: 20px;
    -moz-column-gap: 20px;
    -ms-column-gap: 20px;
    -o-column-gap: 20px;
    column-gap: 20px;
    padding: 0;
    list-style: none;
    line-height: 1.333em;
}
@media (max-width: 900px) {
    .tsd-index-panel ul.tsd-index-list {
        -webkit-column-count: 1;
        -moz-column-count: 1;
        -ms-column-count: 1;
        -o-column-count: 1;
        column-count: 1;
    }
}
@media (min-width: 901px) and (max-width: 1024px) {
    .tsd-index-panel ul.tsd-index-list {
        -webkit-column-count: 2;
        -moz-column-count: 2;
        -ms-column-count: 2;
        -o-column-count: 2;
        column-count: 2;
    }
}
.tsd-index-panel ul.tsd-index-list li {
    -webkit-page-break-inside: avoid;
    -moz-page-break-inside: avoid;
    -ms-page-break-inside: avoid;
    -o-page-break-inside: avoid;
    page-break-inside: avoid;
}
.tsd-index-panel a,
.tsd-index-panel .tsd-parent-kind-module a {
    color: var(--color-ts);
}
.tsd-index-panel .tsd-parent-kind-interface a {
    color: var(--color-ts-interface);
}
.tsd-index-panel .tsd-parent-kind-enum a {
    color: var(--color-ts-enum);
}
.tsd-index-panel .tsd-parent-kind-class a {
    color: var(--color-ts-class);
}
.tsd-index-panel .tsd-kind-module a {
    color: var(--color-ts);
}
.tsd-index-panel .tsd-kind-interface a {
    color: var(--color-ts-interface);
}
.tsd-index-panel .tsd-kind-enum a {
    color: var(--color-ts-enum);
}
.tsd-index-panel .tsd-kind-class a {
    color: var(--color-ts-class);
}
.tsd-index-panel .tsd-is-private a {
    color: var(--color-ts-private);
}

.tsd-flag {
    display: inline-block;
    padding: 0.25em 0.4em;
    border-radius: 4px;
    color: var(--color-comment-tag-text);
    background-color: var(--color-comment-tag);
    text-indent: 0;
    font-size: 75%;
    line-height: 1;
    font-weight: normal;
}

.tsd-anchor {
    position: absolute;
    top: -100px;
}

.tsd-member {
    position: relative;
}
.tsd-member .tsd-anchor + h3 {
    margin-top: 0;
    margin-bottom: 0;
    border-bottom: none;
}
.tsd-member [data-tsd-kind] {
    color: var(--color-ts);
}
.tsd-member [data-tsd-kind="Interface"] {
    color: var(--color-ts-interface);
}
.tsd-member [data-tsd-kind="Enum"] {
    color: var(--color-ts-enum);
}
.tsd-member [data-tsd-kind="Class"] {
    color: var(--color-ts-class);
}
.tsd-member [data-tsd-kind="Private"] {
    color: var(--color-ts-private);
}

.tsd-navigation {
    margin: 0 0 0 40px;
}
.tsd-navigation a {
    display: block;
    padding-top: 2px;
    padding-bottom: 2px;
    border-left: 2px solid transparent;
    color: var(--color-text);
    text-decoration: none;
    transition: border-left-color 0.1s;
}
.tsd-navigation a:hover {
    text-decoration: underline;
}
.tsd-navigation ul {
    margin: 0;
    padding: 0;
    list-style: none;
}
.tsd-navigation li {
    padding: 0;
}

.tsd-navigation.primary {
    padding-bottom: 40px;
}
.tsd-navigation.primary a {
    display: block;
    padding-top: 6px;
    padding-bottom: 6px;
}
.tsd-navigation.primary ul li a {
    padding-left: 5px;
}
.tsd-navigation.primary ul li li a {
    padding-left: 25px;
}
.tsd-navigation.primary ul li li li a {
    padding-left: 45px;
}
.tsd-navigation.primary ul li li li li a {
    padding-left: 65px;
}
.tsd-navigation.primary ul li li li li li a {
    padding-left: 85px;
}
.tsd-navigation.primary ul li li li li li li a {
    padding-left: 105px;
}
.tsd-navigation.primary > ul {
    border-bottom: 1px solid var(--color-panel-divider);
}
.tsd-navigation.primary li {
    border-top: 1px solid var(--color-panel-divider);
}
.tsd-navigation.primary li.current > a {
    font-weight: bold;
}
.tsd-navigation.primary li.label span {
    display: block;
    padding: 20px 0 6px 5px;
    color: var(--color-menu-label);
}
.tsd-navigation.primary li.globals + li > span,
.tsd-navigation.primary li.globals + li > a {
    padding-top: 20px;
}

.tsd-navigation.secondary {
    max-height: calc(100vh - 1rem - 40px);
    overflow: auto;
    position: sticky;
    top: calc(0.5rem + 40px);
    transition: 0.3s;
}
.tsd-navigation.secondary.tsd-navigation--toolbar-hide {
    max-height: calc(100vh - 1rem);
    top: 0.5rem;
}
.tsd-navigation.secondary ul {
    transition: opacity 0.2s;
}
.tsd-navigation.secondary ul li a {
    padding-left: 25px;
}
.tsd-navigation.secondary ul li li a {
    padding-left: 45px;
}
.tsd-navigation.secondary ul li li li a {
    padding-left: 65px;
}
.tsd-navigation.secondary ul li li li li a {
    padding-left: 85px;
}
.tsd-navigation.secondary ul li li li li li a {
    padding-left: 105px;
}
.tsd-navigation.secondary ul li li li li li li a {
    padding-left: 125px;
}
.tsd-navigation.secondary ul.current a {
    border-left-color: var(--color-panel-divider);
}
.tsd-navigation.secondary li.focus > a,
.tsd-navigation.secondary ul.current li.focus > a {
    border-left-color: var(--color-menu-divider-focus);
}
.tsd-navigation.secondary li.current {
    margin-top: 20px;
    margin-bottom: 20px;
    border-left-color: var(--color-panel-divider);
}
.tsd-navigation.secondary li.current > a {
    font-weight: bold;
}

@media (min-width: 901px) {
    .menu-sticky-wrap {
        position: static;
    }
}

.tsd-panel {
    margin: 20px 0;
    padding: 20px;
    background-color: var(--color-panel);
    box-shadow: 0 0 4px rgba(0, 0, 0, 0.25);
}
.tsd-panel:empty {
    display: none;
}
.tsd-panel > h1,
.tsd-panel > h2,
.tsd-panel > h3 {
    margin: 1.5em -20px 10px -20px;
    padding: 0 20px 10px 20px;
    border-bottom: 1px solid var(--color-panel-divider);
}
.tsd-panel > h1.tsd-before-signature,
.tsd-panel > h2.tsd-before-signature,
.tsd-panel > h3.tsd-before-signature {
    margin-bottom: 0;
    border-bottom: 0;
}
.tsd-panel table {
    display: block;
    width: 100%;
    overflow: auto;
    margin-top: 10px;
    word-break: normal;
    word-break: keep-all;
    border-collapse: collapse;
}
.tsd-panel table th {
    font-weight: bold;
}
.tsd-panel table th,
.tsd-panel table td {
    padding: 6px 13px;
    border: 1px solid var(--color-panel-divider);
}
.tsd-panel table tr {
    background: var(--color-background);
}
.tsd-panel table tr:nth-child(even) {
    background: var(--color-secondary-background);
}

.tsd-panel-group {
    margin: 60px 0;
}
.tsd-panel-group > h1,
.tsd-panel-group > h2,
.tsd-panel-group > h3 {
    padding-left: 20px;
    padding-right: 20px;
}

#tsd-search {
    transition: background-color 0.2s;
}
#tsd-search .title {
    position: relative;
    z-index: 2;
}
#tsd-search .field {
    position: absolute;
    left: 0;
    top: 0;
    right: 40px;
    height: 40px;
}
#tsd-search .field input {
    box-sizing: border-box;
    position: relative;
    top: -50px;
    z-index: 1;
    width: 100%;
    padding: 0 10px;
    opacity: 0;
    outline: 0;
    border: 0;
    background: transparent;
    color: var(--color-text);
}
#tsd-search .field label {
    position: absolute;
    overflow: hidden;
    right: -40px;
}
#tsd-search .field input,
#tsd-search .title {
    transition: opacity 0.2s;
}
#tsd-search .results {
    position: absolute;
    visibility: hidden;
    top: 40px;
    width: 100%;
    margin: 0;
    padding: 0;
    list-style: none;
    box-shadow: 0 0 4px rgba(0, 0, 0, 0.25);
}
#tsd-search .results li {
    padding: 0 10px;
    background-color: var(--color-background);
}
#tsd-search .results li:nth-child(even) {
    background-color: var(--color-panel);
}
#tsd-search .results li.state {
    display: none;
}
#tsd-search .results li.current,
#tsd-search .results li:hover {
    background-color: var(--color-panel-divider);
}
#tsd-search .results a {
    display: block;
}
#tsd-search .results a:before {
    top: 10px;
}
#tsd-search .results span.parent {
    color: var(--color-text-aside);
    font-weight: normal;
}
#tsd-search.has-focus {
    background-color: var(--color-panel-divider);
}
#tsd-search.has-focus .field input {
    top: 0;
    opacity: 1;
}
#tsd-search.has-focus .title {
    z-index: 0;
    opacity: 0;
}
#tsd-search.has-focus .results {
    visibility: visible;
}
#tsd-search.loading .results li.state.loading {
    display: block;
}
#tsd-search.failure .results li.state.failure {
    display: block;
}

.tsd-signature {
    margin: 0 0 1em 0;
    padding: 10px;
    border: 1px solid var(--color-panel-divider);
    font-family: Menlo, Monaco, Consolas, "Courier New", monospace;
    font-size: 14px;
    overflow-x: auto;
}
.tsd-signature.tsd-kind-icon {
    padding-left: 30px;
}
.tsd-signature.tsd-kind-icon:before {
    top: 10px;
    left: 10px;
}
.tsd-panel > .tsd-signature {
    margin-left: -20px;
    margin-right: -20px;
    border-width: 1px 0;
}
.tsd-panel > .tsd-signature.tsd-kind-icon {
    padding-left: 40px;
}
.tsd-panel > .tsd-signature.tsd-kind-icon:before {
    left: 20px;
}

.tsd-signature-symbol {
    color: var(--color-text-aside);
    font-weight: normal;
}

.tsd-signature-type {
    font-style: italic;
    font-weight: normal;
}

.tsd-signatures {
    padding: 0;
    margin: 0 0 1em 0;
    border: 1px solid var(--color-panel-divider);
}
.tsd-signatures .tsd-signature {
    margin: 0;
    border-width: 1px 0 0 0;
    transition: background-color 0.1s;
}
.tsd-signatures .tsd-signature:first-child {
    border-top-width: 0;
}
.tsd-signatures .tsd-signature.current {
    background-color: var(--color-panel-divider);
}
.tsd-signatures.active > .tsd-signature {
    cursor: pointer;
}
.tsd-panel > .tsd-signatures {
    margin-left: -20px;
    margin-right: -20px;
    border-width: 1px 0;
}
.tsd-panel > .tsd-signatures .tsd-signature.tsd-kind-icon {
    padding-left: 40px;
}
.tsd-panel > .tsd-signatures .tsd-signature.tsd-kind-icon:before {
    left: 20px;
}
.tsd-panel > a.anchor + .tsd-signatures {
    border-top-width: 0;
    margin-top: -20px;
}

ul.tsd-descriptions {
    position: relative;
    overflow: hidden;
    padding: 0;
    list-style: none;
}
ul.tsd-descriptions.active > .tsd-description {
    display: none;
}
ul.tsd-descriptions.active > .tsd-description.current {
    display: block;
}
ul.tsd-descriptions.active > .tsd-description.fade-in {
    animation: fade-in-delayed 0.3s;
}
ul.tsd-descriptions.active > .tsd-description.fade-out {
    animation: fade-out-delayed 0.3s;
    position: absolute;
    display: block;
    top: 0;
    left: 0;
    right: 0;
    opacity: 0;
    visibility: hidden;
}
ul.tsd-descriptions h4,
ul.tsd-descriptions .tsd-index-panel h3,
.tsd-index-panel ul.tsd-descriptions h3 {
    font-size: 16px;
    margin: 1em 0 0.5em 0;
}

ul.tsd-parameters,
ul.tsd-type-parameters {
    list-style: square;
    margin: 0;
    padding-left: 20px;
}
ul.tsd-parameters > li.tsd-parameter-signature,
ul.tsd-type-parameters > li.tsd-parameter-signature {
    list-style: none;
    margin-left: -20px;
}
ul.tsd-parameters h5,
ul.tsd-type-parameters h5 {
    font-size: 16px;
    margin: 1em 0 0.5em 0;
}
ul.tsd-parameters .tsd-comment,
ul.tsd-type-parameters .tsd-comment {
    margin-top: -0.5em;
}

.tsd-sources {
    font-size: 14px;
    color: var(--color-text-aside);
    margin: 0 0 1em 0;
}
.tsd-sources a {
    color: var(--color-text-aside);
    text-decoration: underline;
}
.tsd-sources ul,
.tsd-sources p {
    margin: 0 !important;
}
.tsd-sources ul {
    list-style: none;
    padding: 0;
}

.tsd-page-toolbar {
    position: fixed;
    z-index: 1;
    top: 0;
    left: 0;
    width: 100%;
    height: 40px;
    color: var(--color-toolbar-text);
    background: var(--color-toolbar);
    border-bottom: 1px solid var(--color-panel-divider);
    transition: transform 0.3s linear;
}
.tsd-page-toolbar a {
    color: var(--color-toolbar-text);
    text-decoration: none;
}
.tsd-page-toolbar a.title {
    font-weight: bold;
}
.tsd-page-toolbar a.title:hover {
    text-decoration: underline;
}
.tsd-page-toolbar .table-wrap {
    display: table;
    width: 100%;
    height: 40px;
}
.tsd-page-toolbar .table-cell {
    display: table-cell;
    position: relative;
    white-space: nowrap;
    line-height: 40px;
}
.tsd-page-toolbar .table-cell:first-child {
    width: 100%;
}

.tsd-page-toolbar--hide {
    transform: translateY(-100%);
}

.tsd-select .tsd-select-list li:before,
.tsd-select .tsd-select-label:before,
.tsd-widget:before {
    content: "";
    display: inline-block;
    width: 40px;
    height: 40px;
    margin: 0 -8px 0 0;
    background-image: url(./widgets.png);
    background-repeat: no-repeat;
    text-indent: -1024px;
    vertical-align: bottom;
    filter: var(--icon-filter);
}
@media (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi) {
    .tsd-select .tsd-select-list li:before,
    .tsd-select .tsd-select-label:before,
    .tsd-widget:before {
        background-image: url(./widgets@2x.png);
        background-size: 320px 40px;
    }
}

.tsd-widget {
    display: inline-block;
    overflow: hidden;
    opacity: 0.8;
    height: 40px;
    transition: opacity 0.1s, background-color 0.2s;
    vertical-align: bottom;
    cursor: pointer;
}
.tsd-widget:hover {
    opacity: 0.9;
}
.tsd-widget.active {
    opacity: 1;
    background-color: var(--color-panel-divider);
}
.tsd-widget.no-caption {
    width: 40px;
}
.tsd-widget.no-caption:before {
    margin: 0;
}
.tsd-widget.search:before {
    background-position: 0 0;
}
.tsd-widget.menu:before {
    background-position: -40px 0;
}
.tsd-widget.options:before {
    background-position: -80px 0;
}
.tsd-widget.options,
.tsd-widget.menu {
    display: none;
}
@media (max-width: 900px) {
    .tsd-widget.options,
    .tsd-widget.menu {
        display: inline-block;
    }
}
input[type="checkbox"] + .tsd-widget:before {
    background-position: -120px 0;
}
input[type="checkbox"]:checked + .tsd-widget:before {
    background-position: -160px 0;
}

.tsd-select {
    position: relative;
    display: inline-block;
    height: 40px;
    transition: opacity 0.1s, background-color 0.2s;
    vertical-align: bottom;
    cursor: pointer;
}
.tsd-select .tsd-select-label {
    opacity: 0.6;
    transition: opacity 0.2s;
}
.tsd-select .tsd-select-label:before {
    background-position: -240px 0;
}
.tsd-select.active .tsd-select-label {
    opacity: 0.8;
}
.tsd-select.active .tsd-select-list {
    visibility: visible;
    opacity: 1;
    transition-delay: 0s;
}
.tsd-select .tsd-select-list {
    position: absolute;
    visibility: hidden;
    top: 40px;
    left: 0;
    margin: 0;
    padding: 0;
    opacity: 0;
    list-style: none;
    box-shadow: 0 0 4px rgba(0, 0, 0, 0.25);
    transition: visibility 0s 0.2s, opacity 0.2s;
}
.tsd-select .tsd-select-list li {
    padding: 0 20px 0 0;
    background-color: var(--color-background);
}
.tsd-select .tsd-select-list li:before {
    background-position: 40px 0;
}
.tsd-select .tsd-select-list li:nth-child(even) {
    background-color: var(--color-panel);
}
.tsd-select .tsd-select-list li:hover {
    background-color: var(--color-panel-divider);
}
.tsd-select .tsd-select-list li.selected:before {
    background-position: -200px 0;
}
@media (max-width: 900px) {
    .tsd-select .tsd-select-list {
        top: 0;
        left: auto;
        right: 100%;
        margin-right: -5px;
    }
    .tsd-select .tsd-select-label:before {
        background-position: -280px 0;
    }
}

img {
    max-width: 100%;
}

.tsd-anchor-icon {
    margin-left: 10px;
    vertical-align: middle;
    color: var(--color-text);
}

.tsd-anchor-icon svg {
    width: 1em;
    height: 1em;
    visibility: hidden;
}

.tsd-anchor-link:hover > .tsd-anchor-icon svg {
    visibility: visible;
}


================================================================================
File: docs\classes\Alchemy.html
Size: 19.15 kB
================================================================================

<!DOCTYPE html><html class="default"><head><meta charSet="utf-8"/><meta http-equiv="x-ua-compatible" content="IE=edge"/><title>Alchemy | alchemy-sdk</title><meta name="description" content="Documentation for alchemy-sdk"/><meta name="viewport" content="width=device-width, initial-scale=1"/><link rel="stylesheet" href="../assets/style.css"/><link rel="stylesheet" href="../assets/highlight.css"/><script async src="../assets/search.js" id="search-script"></script></head><body><script>document.body.classList.add(localStorage.getItem("tsd-theme") || "os")</script><header><div class="tsd-page-toolbar"><div class="container"><div class="table-wrap"><div class="table-cell" id="tsd-search" data-base=".."><div class="field"><label for="tsd-search-field" class="tsd-widget search no-caption">Search</label><input type="text" id="tsd-search-field"/></div><ul class="results"><li class="state loading">Preparing search index...</li><li class="state failure">The search index is not available</li></ul><a href="../index.html" class="title">alchemy-sdk</a></div><div class="table-cell" id="tsd-widgets"><div id="tsd-filter"><a href="#" class="tsd-widget options no-caption" data-toggle="options">Options</a><div class="tsd-filter-group"><div class="tsd-select" id="tsd-filter-visibility"><span class="tsd-select-label">All</span><ul class="tsd-select-list"><li data-value="public">Public</li><li data-value="protected">Public/Protected</li><li data-value="private" class="selected">All</li></ul></div> <input type="checkbox" id="tsd-filter-inherited" checked/><label class="tsd-widget" for="tsd-filter-inherited">Inherited</label><input type="checkbox" id="tsd-filter-externals" checked/><label class="tsd-widget" for="tsd-filter-externals">Externals</label></div></div><a href="#" class="tsd-widget menu no-caption" data-toggle="menu">Menu</a></div></div></div></div><div class="tsd-page-title"><div class="container"><ul class="tsd-breadcrumb"><li><a href="../modules.html">alchemy-sdk</a></li><li><a href="Alchemy.html">Alchemy</a></li></ul><h1>Class Alchemy </h1></div></div></header><div class="container container-main"><div class="row"><div class="col-8 col-content"><section class="tsd-panel tsd-comment"><div class="tsd-comment tsd-typography"><div class="lead">
<p>The Alchemy SDK client. This class is the main entry point into Alchemy&#39;s
APIs and separates functionality into different namespaces.</p>
</div><div><p>Each SDK instance is associated with a specific network and API key. To use a
different network or API key, create a new instance of <a href="Alchemy.html">Alchemy</a>.</p>
</div></div></section><section class="tsd-panel tsd-hierarchy"><h3>Hierarchy</h3><ul class="tsd-hierarchy"><li><span class="target">Alchemy</span></li></ul></section><section class="tsd-panel-group tsd-index-group"><h2>Index</h2><section class="tsd-panel tsd-index-panel"><div class="tsd-index-content"><section class="tsd-index-section "><h3>Constructors</h3><ul class="tsd-index-list"><li class="tsd-kind-constructor tsd-parent-kind-class"><a href="Alchemy.html#constructor" class="tsd-kind-icon">constructor</a></li></ul></section><section class="tsd-index-section "><h3>Properties</h3><ul class="tsd-index-list"><li class="tsd-kind-property tsd-parent-kind-class"><a href="Alchemy.html#config" class="tsd-kind-icon">config</a></li><li class="tsd-kind-property tsd-parent-kind-class"><a href="Alchemy.html#core" class="tsd-kind-icon">core</a></li><li class="tsd-kind-property tsd-parent-kind-class"><a href="Alchemy.html#debug" class="tsd-kind-icon">debug</a></li><li class="tsd-kind-property tsd-parent-kind-class"><a href="Alchemy.html#nft" class="tsd-kind-icon">nft</a></li><li class="tsd-kind-property tsd-parent-kind-class"><a href="Alchemy.html#notify" class="tsd-kind-icon">notify</a></li><li class="tsd-kind-property tsd-parent-kind-class"><a href="Alchemy.html#prices" class="tsd-kind-icon">prices</a></li><li class="tsd-kind-property tsd-parent-kind-class"><a href="Alchemy.html#transact" class="tsd-kind-icon">transact</a></li><li class="tsd-kind-property tsd-parent-kind-class"><a href="Alchemy.html#ws" class="tsd-kind-icon">ws</a></li></ul></section></div></section></section><section class="tsd-panel-group tsd-member-group "><h2>Constructors</h2><section class="tsd-panel tsd-member tsd-kind-constructor tsd-parent-kind-class"><a id="constructor" class="tsd-anchor"></a><h3 class="tsd-anchor-link">constructor<a href="#constructor" aria-label="Permalink" class="tsd-anchor-icon"><svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-link" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M10 14a3.5 3.5 0 0 0 5 0l4 -4a3.5 3.5 0 0 0 -5 -5l-.5 .5"></path><path d="M14 10a3.5 3.5 0 0 0 -5 0l-4 4a3.5 3.5 0 0 0 5 5l.5 -.5"></path></svg></a></h3><ul class="tsd-signatures tsd-kind-constructor tsd-parent-kind-class"><li class="tsd-signature tsd-kind-icon">new <wbr/>Alchemy<span class="tsd-signature-symbol">(</span>settings<span class="tsd-signature-symbol">?: </span><a href="../interfaces/AlchemySettings.html" class="tsd-signature-type" data-tsd-kind="Interface">AlchemySettings</a><span class="tsd-signature-symbol">)</span><span class="tsd-signature-symbol">: </span><a href="Alchemy.html" class="tsd-signature-type" data-tsd-kind="Class">Alchemy</a></li></ul><ul class="tsd-descriptions"><li class="tsd-description"><aside class="tsd-sources"><ul><li>Defined in <a href="https://github.com/alchemyplatform/alchemy-sdk-js/blob/8f119ad1/src/api/alchemy.ts#L67">src/api/alchemy.ts:67</a></li></ul></aside><h4 class="tsd-parameters-title">Parameters</h4><ul class="tsd-parameters"><li><h5><span class="tsd-flag ts-flagOptional">Optional</span> settings: <a href="../interfaces/AlchemySettings.html" class="tsd-signature-type" data-tsd-kind="Interface">AlchemySettings</a></h5></li></ul><h4 class="tsd-returns-title">Returns <a href="Alchemy.html" class="tsd-signature-type" data-tsd-kind="Class">Alchemy</a></h4></li></ul></section></section><section class="tsd-panel-group tsd-member-group "><h2>Properties</h2><section class="tsd-panel tsd-member tsd-kind-property tsd-parent-kind-class"><a id="config" class="tsd-anchor"></a><h3 class="tsd-anchor-link"><span class="tsd-flag ts-flagReadonly">Readonly</span> config<a href="#config" aria-label="Permalink" class="tsd-anchor-icon"><svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-link" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M10 14a3.5 3.5 0 0 0 5 0l4 -4a3.5 3.5 0 0 0 -5 -5l-.5 .5"></path><path d="M14 10a3.5 3.5 0 0 0 -5 0l-4 4a3.5 3.5 0 0 0 5 5l.5 -.5"></path></svg></a></h3><div class="tsd-signature tsd-kind-icon">config<span class="tsd-signature-symbol">:</span> <a href="AlchemyConfig.html" class="tsd-signature-type" data-tsd-kind="Class">AlchemyConfig</a></div><aside class="tsd-sources"><ul><li>Defined in <a href="https://github.com/alchemyplatform/alchemy-sdk-js/blob/8f119ad1/src/api/alchemy.ts#L43">src/api/alchemy.ts:43</a></li></ul></aside><div class="tsd-comment tsd-typography"><div class="lead">
<p>Holds the setting information for the instance of the Alchemy SDK client
and allows access to the underlying providers.</p>
</div></div></section><section class="tsd-panel tsd-member tsd-kind-property tsd-parent-kind-class"><a id="core" class="tsd-anchor"></a><h3 class="tsd-anchor-link"><span class="tsd-flag ts-flagReadonly">Readonly</span> core<a href="#core" aria-label="Permalink" class="tsd-anchor-icon"><svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-link" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M10 14a3.5 3.5 0 0 0 5 0l4 -4a3.5 3.5 0 0 0 -5 -5l-.5 .5"></path><path d="M14 10a3.5 3.5 0 0 0 -5 0l-4 4a3.5 3.5 0 0 0 5 5l.5 -.5"></path></svg></a></h3><div class="tsd-signature tsd-kind-icon">core<span class="tsd-signature-symbol">:</span> <a href="CoreNamespace.html" class="tsd-signature-type" data-tsd-kind="Class">CoreNamespace</a></div><aside class="tsd-sources"><ul><li>Defined in <a href="https://github.com/alchemyplatform/alchemy-sdk-js/blob/8f119ad1/src/api/alchemy.ts#L25">src/api/alchemy.ts:25</a></li></ul></aside><div class="tsd-comment tsd-typography"><div class="lead">
<p>The <code>core</code> namespace contains the core eth json-rpc calls and Alchemy&#39;s
Enhanced APIs.</p>
</div></div></section><section class="tsd-panel tsd-member tsd-kind-property tsd-parent-kind-class"><a id="debug" class="tsd-anchor"></a><h3 class="tsd-anchor-link"><span class="tsd-flag ts-flagReadonly">Readonly</span> debug<a href="#debug" aria-label="Permalink" class="tsd-anchor-icon"><svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-link" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M10 14a3.5 3.5 0 0 0 5 0l4 -4a3.5 3.5 0 0 0 -5 -5l-.5 .5"></path><path d="M14 10a3.5 3.5 0 0 0 -5 0l-4 4a3.5 3.5 0 0 0 5 5l.5 -.5"></path></svg></a></h3><div class="tsd-signature tsd-kind-icon">debug<span class="tsd-signature-symbol">:</span> <a href="DebugNamespace.html" class="tsd-signature-type" data-tsd-kind="Class">DebugNamespace</a></div><aside class="tsd-sources"><ul><li>Defined in <a href="https://github.com/alchemyplatform/alchemy-sdk-js/blob/8f119ad1/src/api/alchemy.ts#L55">src/api/alchemy.ts:55</a></li></ul></aside><div class="tsd-comment tsd-typography"><div class="lead">
<p>The <code>debug</code> namespace contains methods for inspecting and debugging
transactions.</p>
</div></div></section><section class="tsd-panel tsd-member tsd-kind-property tsd-parent-kind-class"><a id="nft" class="tsd-anchor"></a><h3 class="tsd-anchor-link"><span class="tsd-flag ts-flagReadonly">Readonly</span> nft<a href="#nft" aria-label="Permalink" class="tsd-anchor-icon"><svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-link" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M10 14a3.5 3.5 0 0 0 5 0l4 -4a3.5 3.5 0 0 0 -5 -5l-.5 .5"></path><path d="M14 10a3.5 3.5 0 0 0 -5 0l-4 4a3.5 3.5 0 0 0 5 5l.5 -.5"></path></svg></a></h3><div class="tsd-signature tsd-kind-icon">nft<span class="tsd-signature-symbol">:</span> <a href="NftNamespace.html" class="tsd-signature-type" data-tsd-kind="Class">NftNamespace</a></div><aside class="tsd-sources"><ul><li>Defined in <a href="https://github.com/alchemyplatform/alchemy-sdk-js/blob/8f119ad1/src/api/alchemy.ts#L28">src/api/alchemy.ts:28</a></li></ul></aside><div class="tsd-comment tsd-typography"><div class="lead">
<p>The <code>nft</code> namespace contains methods for Alchemy&#39;s NFT API.</p>
</div></div></section><section class="tsd-panel tsd-member tsd-kind-property tsd-parent-kind-class"><a id="notify" class="tsd-anchor"></a><h3 class="tsd-anchor-link"><span class="tsd-flag ts-flagReadonly">Readonly</span> notify<a href="#notify" aria-label="Permalink" class="tsd-anchor-icon"><svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-link" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M10 14a3.5 3.5 0 0 0 5 0l4 -4a3.5 3.5 0 0 0 -5 -5l-.5 .5"></path><path d="M14 10a3.5 3.5 0 0 0 -5 0l-4 4a3.5 3.5 0 0 0 5 5l.5 -.5"></path></svg></a></h3><div class="tsd-signature tsd-kind-icon">notify<span class="tsd-signature-symbol">:</span> <a href="NotifyNamespace.html" class="tsd-signature-type" data-tsd-kind="Class">NotifyNamespace</a></div><aside class="tsd-sources"><ul><li>Defined in <a href="https://github.com/alchemyplatform/alchemy-sdk-js/blob/8f119ad1/src/api/alchemy.ts#L49">src/api/alchemy.ts:49</a></li></ul></aside><div class="tsd-comment tsd-typography"><div class="lead">
<p>The <code>notify</code> namespace contains methods for creating and managing webhooks
as part of the Notify API.</p>
</div></div></section><section class="tsd-panel tsd-member tsd-kind-property tsd-parent-kind-class"><a id="prices" class="tsd-anchor"></a><h3 class="tsd-anchor-link"><span class="tsd-flag ts-flagReadonly">Readonly</span> prices<a href="#prices" aria-label="Permalink" class="tsd-anchor-icon"><svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-link" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M10 14a3.5 3.5 0 0 0 5 0l4 -4a3.5 3.5 0 0 0 -5 -5l-.5 .5"></path><path d="M14 10a3.5 3.5 0 0 0 -5 0l-4 4a3.5 3.5 0 0 0 5 5l.5 -.5"></path></svg></a></h3><div class="tsd-signature tsd-kind-icon">prices<span class="tsd-signature-symbol">:</span> <a href="PricesNamespace.html" class="tsd-signature-type" data-tsd-kind="Class">PricesNamespace</a></div><aside class="tsd-sources"><ul><li>Defined in <a href="https://github.com/alchemyplatform/alchemy-sdk-js/blob/8f119ad1/src/api/alchemy.ts#L58">src/api/alchemy.ts:58</a></li></ul></aside><div class="tsd-comment tsd-typography"><div class="lead">
<p>The <code>prices</code> namespace contains methods for getting token price data.</p>
</div></div></section><section class="tsd-panel tsd-member tsd-kind-property tsd-parent-kind-class"><a id="transact" class="tsd-anchor"></a><h3 class="tsd-anchor-link"><span class="tsd-flag ts-flagReadonly">Readonly</span> transact<a href="#transact" aria-label="Permalink" class="tsd-anchor-icon"><svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-link" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M10 14a3.5 3.5 0 0 0 5 0l4 -4a3.5 3.5 0 0 0 -5 -5l-.5 .5"></path><path d="M14 10a3.5 3.5 0 0 0 -5 0l-4 4a3.5 3.5 0 0 0 5 5l.5 -.5"></path></svg></a></h3><div class="tsd-signature tsd-kind-icon">transact<span class="tsd-signature-symbol">:</span> <a href="TransactNamespace.html" class="tsd-signature-type" data-tsd-kind="Class">TransactNamespace</a></div><aside class="tsd-sources"><ul><li>Defined in <a href="https://github.com/alchemyplatform/alchemy-sdk-js/blob/8f119ad1/src/api/alchemy.ts#L37">src/api/alchemy.ts:37</a></li></ul></aside><div class="tsd-comment tsd-typography"><div class="lead">
<p>The <code>transact</code> namespace contains methods for sending transactions and
checking on the state of submitted transasctions.</p>
</div></div></section><section class="tsd-panel tsd-member tsd-kind-property tsd-parent-kind-class"><a id="ws" class="tsd-anchor"></a><h3 class="tsd-anchor-link"><span class="tsd-flag ts-flagReadonly">Readonly</span> ws<a href="#ws" aria-label="Permalink" class="tsd-anchor-icon"><svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-link" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M10 14a3.5 3.5 0 0 0 5 0l4 -4a3.5 3.5 0 0 0 -5 -5l-.5 .5"></path><path d="M14 10a3.5 3.5 0 0 0 -5 0l-4 4a3.5 3.5 0 0 0 5 5l.5 -.5"></path></svg></a></h3><div class="tsd-signature tsd-kind-icon">ws<span class="tsd-signature-symbol">:</span> <a href="WebSocketNamespace.html" class="tsd-signature-type" data-tsd-kind="Class">WebSocketNamespace</a></div><aside class="tsd-sources"><ul><li>Defined in <a href="https://github.com/alchemyplatform/alchemy-sdk-js/blob/8f119ad1/src/api/alchemy.ts#L31">src/api/alchemy.ts:31</a></li></ul></aside><div class="tsd-comment tsd-typography"><div class="lead">
<p>The <code>ws</code> namespace contains methods for using WebSockets and creating subscriptions.</p>
</div></div></section></section></div><div class="col-4 col-menu menu-sticky-wrap menu-highlight"><nav class="tsd-navigation primary"><ul><li class=""><a href="../modules.html">Exports</a></li><li class=" tsd-kind-namespace"><a href="../modules/Utils.html">Utils</a></li></ul></nav><nav class="tsd-navigation secondary menu-sticky"><ul><li class="current tsd-kind-class"><a href="Alchemy.html" class="tsd-kind-icon">Alchemy</a><ul><li class="tsd-kind-constructor tsd-parent-kind-class"><a href="Alchemy.html#constructor" class="tsd-kind-icon">constructor</a></li><li class="tsd-kind-property tsd-parent-kind-class"><a href="Alchemy.html#config" class="tsd-kind-icon">config</a></li><li class="tsd-kind-property tsd-parent-kind-class"><a href="Alchemy.html#core" class="tsd-kind-icon">core</a></li><li class="tsd-kind-property tsd-parent-kind-class"><a href="Alchemy.html#debug" class="tsd-kind-icon">debug</a></li><li class="tsd-kind-property tsd-parent-kind-class"><a href="Alchemy.html#nft" class="tsd-kind-icon">nft</a></li><li class="tsd-kind-property tsd-parent-kind-class"><a href="Alchemy.html#notify" class="tsd-kind-icon">notify</a></li><li class="tsd-kind-property tsd-parent-kind-class"><a href="Alchemy.html#prices" class="tsd-kind-icon">prices</a></li><li class="tsd-kind-property tsd-parent-kind-class"><a href="Alchemy.html#transact" class="tsd-kind-icon">transact</a></li><li class="tsd-kind-property tsd-parent-kind-class"><a href="Alchemy.html#ws" class="tsd-kind-icon">ws</a></li></ul></li></ul></nav></div></div></div><footer class="with-border-bottom"><div class="container"><h2>Legend</h2><div class="tsd-legend-group"><ul class="tsd-legend"><li class="tsd-kind-constructor tsd-parent-kind-class"><span class="tsd-kind-icon">Constructor</span></li><li class="tsd-kind-property tsd-parent-kind-class"><span class="tsd-kind-icon">Property</span></li><li class="tsd-kind-method tsd-parent-kind-class"><span class="tsd-kind-icon">Method</span></li></ul><ul class="tsd-legend"><li class="tsd-kind-property tsd-parent-kind-class tsd-is-private"><span class="tsd-kind-icon">Private property</span></li><li class="tsd-kind-method tsd-parent-kind-class tsd-is-private"><span class="tsd-kind-icon">Private method</span></li></ul><ul class="tsd-legend"><li class="tsd-kind-property tsd-parent-kind-interface"><span class="tsd-kind-icon">Property</span></li></ul><ul class="tsd-legend"><li class="tsd-kind-constructor tsd-parent-kind-class tsd-is-inherited"><span class="tsd-kind-icon">Inherited constructor</span></li></ul></div><h2>Settings</h2><p>Theme <select id="theme"><option value="os">OS</option><option value="light">Light</option><option value="dark">Dark</option></select></p></div></footer><div class="container tsd-generator"><p>Generated using <a href="https://typedoc.org/" target="_blank">TypeDoc</a></p></div><div class="overlay"></div><script src="../assets/main.js"></script></body></html>

================================================================================
File: docs\classes\AlchemyConfig.html
Size: 24.85 kB
================================================================================

<!DOCTYPE html><html class="default"><head><meta charSet="utf-8"/><meta http-equiv="x-ua-compatible" content="IE=edge"/><title>AlchemyConfig | alchemy-sdk</title><meta name="description" content="Documentation for alchemy-sdk"/><meta name="viewport" content="width=device-width, initial-scale=1"/><link rel="stylesheet" href="../assets/style.css"/><link rel="stylesheet" href="../assets/highlight.css"/><script async src="../assets/search.js" id="search-script"></script></head><body><script>document.body.classList.add(localStorage.getItem("tsd-theme") || "os")</script><header><div class="tsd-page-toolbar"><div class="container"><div class="table-wrap"><div class="table-cell" id="tsd-search" data-base=".."><div class="field"><label for="tsd-search-field" class="tsd-widget search no-caption">Search</label><input type="text" id="tsd-search-field"/></div><ul class="results"><li class="state loading">Preparing search index...</li><li class="state failure">The search index is not available</li></ul><a href="../index.html" class="title">alchemy-sdk</a></div><div class="table-cell" id="tsd-widgets"><div id="tsd-filter"><a href="#" class="tsd-widget options no-caption" data-toggle="options">Options</a><div class="tsd-filter-group"><div class="tsd-select" id="tsd-filter-visibility"><span class="tsd-select-label">All</span><ul class="tsd-select-list"><li data-value="public">Public</li><li data-value="protected">Public/Protected</li><li data-value="private" class="selected">All</li></ul></div> <input type="checkbox" id="tsd-filter-inherited" checked/><label class="tsd-widget" for="tsd-filter-inherited">Inherited</label><input type="checkbox" id="tsd-filter-externals" checked/><label class="tsd-widget" for="tsd-filter-externals">Externals</label></div></div><a href="#" class="tsd-widget menu no-caption" data-toggle="menu">Menu</a></div></div></div></div><div class="tsd-page-title"><div class="container"><ul class="tsd-breadcrumb"><li><a href="../modules.html">alchemy-sdk</a></li><li><a href="AlchemyConfig.html">AlchemyConfig</a></li></ul><h1>Class AlchemyConfig </h1></div></div></header><div class="container container-main"><div class="row"><div class="col-8 col-content"><section class="tsd-panel tsd-comment"><div class="tsd-comment tsd-typography"><div class="lead">
<p>This class holds the config information for the SDK client instance and
exposes the underlying providers for more advanced use cases.</p>