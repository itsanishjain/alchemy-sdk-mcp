
================================================================================
File: .circleci\config.yml
Size: 1.35 kB
================================================================================

# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  test:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/node:16.13.2
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - restore_cache:
          name: Restore Yarn package cache
          keys:
              - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Install dependencies
          command: "yarn --frozen-lockfile"
      - save_cache:
          name: Save Yarn package cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
              - ~/.cache/yarn
      - run:
          name: Run tests
          command: "yarn test"

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  workflow:
    jobs:
      - test


================================================================================
File: .eslintrc.js
Size: 1.37 kB
================================================================================

module.exports = {
  plugins: ['import', 'unused-imports', '@typescript-eslint'],
  parser: '@typescript-eslint/parser',
  overrides: [
    {
      files: ['*.ts']
    }
  ],
  parserOptions: {
    ecmaVersion: 2017,
    sourceType: 'module',
    project: './tsconfig.json'
  },
  ignorePatterns: ['.eslintrc.js', 'rollup.config.js'],
  rules: {
    curly: ['error', 'all'],
    'no-extra-label': 'error',
    'no-unused-labels': 'error',
    'new-parens': 'error',
    'no-new-wrappers': 'error',
    'no-debugger': 'error',
    'no-duplicate-case': 'error',
    'no-throw-literal': 'error',
    'no-return-await': 'error',
    'no-unsafe-finally': 'error',
    'no-unused-expressions': [
      'error',
      {
        allowShortCircuit: true
      }
    ],
    'no-var': 'error',
    'object-shorthand': 'error',
    'prefer-arrow-callback': [
      'error',
      {
        allowNamedFunctions: true
      }
    ],
    'prefer-const': [
      'error',
      {
        destructuring: 'all'
      }
    ],
    'no-array-constructor': 'error',
    'import/no-default-export': 'error',
    'import/no-duplicates': 'error',
    'unused-imports/no-unused-imports-ts': 'error',
    'default-case': 'error',
    '@typescript-eslint/member-ordering': 'error',
    '@typescript-eslint/no-floating-promises': 'error'
  }
};


================================================================================
File: .gitattributes
Size: 104 B
================================================================================

# Used to support JSON comments when using api-extractor
*.json  linguist-language=JSON-with-Comments


================================================================================
File: .github\ISSUE_TEMPLATE\bug_report.md
Size: 304 B
================================================================================

---
name: Bug report
about: Create a report to help us improve
title: ''
labels: bug, needs-triage
assignees: ''
---

### [REQUIRED] Environment

- Browser version:
- Alchemy SDK version:

### [REQUIRED] Describe the problem

#### How to reproduce:

#### Relevant code or sample repro:


================================================================================
File: .github\ISSUE_TEMPLATE\feature_request.md
Size: 664 B
================================================================================

---
name: Feature request
about: Suggest an idea for this project
title: 'FR: <My Feature Request>'
labels: feature request, needs-triage
assignees: ''
---

**Is your feature request related to a problem? Please describe.**
A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]

**Describe the solution you'd like**
A clear and concise description of what you want to happen.

**Describe alternatives you've considered**
A clear and concise description of any alternative solutions or features you've considered.

**Additional context**
Add any other context or screenshots about the feature request here.


================================================================================
File: .github\workflows\stale.yml
Size: 1 kB
================================================================================

# This workflow warns and then closes issues and PRs that have had no activity for a specified amount of time.
#
# You can adjust the behavior by modifying this file.
# For more information, see:
# https://github.com/actions/stale
name: Mark stale issues and pull requests

on:
  schedule:
  - cron: '25 1 * * *'

jobs:
  stale:

    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write

    steps:
    - uses: actions/stale@v5
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        stale-issue-message: 'This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs'
        stale-pr-message: 'This PR has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs'
        stale-issue-label: 'no-issue-activity'
        stale-pr-label: 'no-pr-activity'
        days-before-stale: 30


================================================================================
File: .gitignore
Size: 228 B
================================================================================

# Mac OS
.DS_Store

# Yarn
node_modules
yarn-error.log
yarn-debug.log

# Build files
dist

# api-extractor temp files
temp

# Alchemy keys and tokens
alchemy.env

.npmrc

# VSCode History Extension
.history


================================================================================
File: .husky\pre-commit
Size: 65 B
================================================================================

#!/bin/sh
. "$(dirname "$0")/_/husky.sh"

npm run pre-commit


================================================================================
File: .npmignore
Size: 0 B
================================================================================



================================================================================
File: .prettierignore
Size: 68 B
================================================================================

dist/
node_modules/
docs/
docs-md/
etc/
temp/
src/version.ts


================================================================================
File: .prettierrc.json
Size: 307 B
================================================================================

{
  "singleQuote": true,
  "printWidth": 80,
  "tabWidth": 2,
  "trailingComma": "none",
  "semi": true,
  "arrowParens": "avoid",
  "plugins": ["prettier-plugin-jsdoc"],
  "importOrder": ["^@ethersproject/(.*)$", "^[./]"],
  "importOrderSeparation": true,
  "importOrderSortSpecifiers": true
}


================================================================================
File: CHANGELOG.md
Size: 20.96 kB
================================================================================

# Changelog for Alchemy SDK for JavaScript

## Unreleased

### Major Changes

### Minor Changes

## 3.5.3

### Major Changes

### Minor Changes

- Added `ABSTRACT` mainnet.
- Added `UNICHAIN` mainnet.
- Added `SEI` testnet.

## 3.5.2

### Minor Changes

- Added `BERACHAIN` mainnet.

## 3.5.1

### Minor Changes

- Added many new networks

## 3.5.0

### Major Changes

- Added a new `PricesNamespace` with three new methods: `getTokenPriceByAddress()`, `getTokenPriceBySymbol()`, `getHistoricalPriceByAddress`, and `getHistoricalPriceBySymbol()`. Access these methods via `alchemy.prices`.

## 3.4.8

### Minor Changes

- Added networks for `FLOW`.

## 3.4.7

### Minor Changes

- Added networks for `ROOTSTOCK`.

## 3.4.6

### Minor Changes

- Fixed webhook network parsing in `getAllWebhooks` method for all supported networks.

## 3.4.5

### Minor Changes

- Fixed createWebhook's `skip_empty_messages` param.

## 3.4.4

### Minor Changes

- Added networks for `WORLDCHAIN`.

## 3.4.3

### Minor Changes

- Added networks for `SONEIUM` and `BERACHAIN`. Note that these are primarily for `CoreNamespace` methods. Not all namespaces will work with these networks.

## 3.4.2

### Minor Changes

- Addressed security vulnerabilities by adding overrides for `elliptic` and `ws` dependencies. Specifically:
  - Updated `elliptic` to version `6.5.7` (latest) to fix vulnerabilities related to EDDSA signature length checks and ECDSA BER-encoded signatures.
  - Updated `ws` to version `7.5.10` to mitigate a potential DoS vulnerability. The latest major version of `ws` is `8.x`, however, `7.5.10` is the most up-to-date version compatible with `ethers v5`, which depends on `7.x` versions of `ws`.

## 3.4.1

### Minor Changes

- Fixed a bug where the `openSeaMetadata?.safelistRequestStatus` was undefined in the `Nft` object that resulted in a `Cannot read properties of undefined` error (#416)

## 3.4.0

### Major Changes

- Added networks for `SHAPE`, `LINEA`, `FANTOM`, `ZETACHAIN`, `ARBNOVA`, `BLAST`, `MANTLE`, `SCROLL`, `GNOSIS`, `BNB`, `AVAX`, `CELO`, `METIS`, `OPBNB`. Note that these are primarily for `CoreNamespace` methods. Not all namespaces will work these networks.
- App IDs are now a required property when calling `NotifyNamespace.createWebhook()` with `WebhookType.GRAPHQL`. This is not a Typescript breaking change, but rather a run-time breaking change. Calling the endpoint without an App ID will now throw an error instead of returning a 503.

### Minor Changes

- Fixed a bug with `NotifyNamespace.createWebhook()` when using `WebhookType.GRAPHQL`. Also added the option use `skipEmptyMessages` when creating graphQL webhooks to skip empty blocks.
- Updated axios version to remove security warning (#443).

## 3.3.1

### Minor Changes

- Fixed a bug where the `openSeaMetadata?.safelistRequestStatus` was undefined in the `Nft` object that resulted in a `Cannot read properties of undefined` error (#416)
- Added support `connectionInfoOverrides` field in the `Alchemy` constructor. This allows you to override the ethers.js `ConnectionInfo` object and specify custom connection information for the underlying `JsonRpcProvider`.

## 3.3.0

### Major Changes

- Added support for Zksync Mainnet and Sepolia via the `Network.ZKSYNC_MAINNET` and `Network.ZKSYNC_SEPOLIA` enums.

### Minor Changes

## 3.2.1

### Major Changes

- Added support for Arbitrum and Optimism Sepolia webhook creation.

### Minor Changes

- API error messages return the actual error instead of [Object object]

## 3.2.0

### Major Changes

- Added support for Polygon Amoy network via the `Network.MATIC_AMOY` enum.

### Minor Changes

## 3.1.2

### Major Changes

### Minor Changes

- Upgraded the `axios` dependency to `v1.6.5`, fixing a vulnerable version #397. Thanks @mpsq for the contribution!

## 3.1.1

### Major Changes

### Minor Changes

- Added endpoints for `isAirdropNft()` and `reportSpam()` in `NftNamespace`.
- Added a missing `marketplaceAddress` field to the `NftSale` in `NftNamespace.getNftSales()`.
- Fixed an incorrect field name for `bannerImageUrl` in `OpenSeaCollectionMetadata`. Deprecated the old field name `imageBannerUrl`.
- Added support for Base networks in `NotifyNamespace`.

## 3.1.0

### Major Changes

- Added support for Optimism Sepolia and Base Sepolia via the `Network.OPT_SEPOLIA` and `Network.BASE_SEPOLIA` enums.

### Minor Changes

## 3.0.0

### Major Changes

- For a full list of changes to V3 from V2, please visit: https://docs.alchemy.com/reference/alchemy-sdk-v2-to-v3-migration-guide. There, you can also find the API reference for v2 endpoints as well. V3 primarily involves changes to use the V3 NFT API.

## 2.11.0

### Minor Changes

- Added support for Arbitrum Sepolia network via the `Network.ARB_SEPOLIA` enum.

## 2.10.1

### Major Changes

### Minor Changes

- Fixed a bug in the `Log` object where the `removed` field was not included in the response.

## 2.10.0

### Major Changes

- Add support for Base

### Minor Changes

## 2.9.2

### Major Changes

- Added a new method `CoreNamespace.isContractAddress()` to easily check if an address is a contract or EOA. The method accepts a string address and returns a boolean value indicating if the given address is a contract address or not.

### Minor Changes

- Fixed a bug where `GetOwnersForContractResponse` was missing the `pageKey` field.

## 2.9.1

### Major Changes

### Minor Changes

- Add the `refreshCache` parameter to NFT rarity endpoints to allow users to update stale rarity values.
- Add the `includeCount` parameter to getOwnersForContract.

## 2.9.0

### Major Changes

- Fixed a bug with in `NftNamespace.getNftSales()` in which there was a typo in `decimal` field of the `NftSaleFeeData` object. The field is now correctly named `decimals`, and `decimal` is marked deprecated to avoid a breaking change.

### Minor Changes

- Added redundancy to `CoreNamespace.getTokensForOwner()` to handle failures when fetching token metadata.
- Added support for the `acquiredAt` field for ordered `getNftsForOwner` queries. Only available when specifying `orderBy: NftOrdering.TRANSFERTIME` in the request.
- Added the `NftSaleMarketplace.BLUR` marketplace enum to the `NftNamespace.getNftSales()` method return.
- Added support for the `validAt` response field to `NftNamespace.getNftSales()`.

## 2.8.3

### Major Changes

### Minor Changes

- Fixed a bug with `NotifyNamespace` when creating webhooks on ETH_SEPOLIA, OPT_GOERLI, and ARB_GOERLI.
- Fixed a bug with `Wallet.populateTransaction()` where the method would never resolve.
- Fixed a bug with `NftNamespace.getMintedNfts()` and `NftNamespace.getTransfersForOwner()` where the method would always throw an error for certain addresses (#318).

## 2.8.2

### Major Changes

### Minor Changes

- Moved the `exports.default` field to be the last field. This fixed a bug introduced in `2.8.1` that prevented certain frameworks from building (#313).

## 2.8.1

### Major Changes

### Minor Changes

- Fixed a bug where the SDK was not compatible with `moduleResolution: bundler` when using `typescript` at `v5.0`(#302). Thanks @florrdv!
- Fixed a bug with `getTransfersForOwner()` and `getTransfersForContract()` methods in the `NftNamespace`, where some NFTs would not be returned if the NFT was transferred multiple times.

## 2.8.0

### Major Changes

Added PolygonZkEvm Mainnet and Testnet limited support to the sdk

### Minor Changes

## 2.7.0

### Major Changes

- Added `CustomGraphqlWebhook` to be used with the `NotifyNamespace`. This webhook uses graphql to track any event on every block.

### Minor Changes

## 2.6.3

### Major Changes

### Minor Changes

- Added support for a `pageKey` and `pageSize` parameter in `NftNamespace.getOwnersforNft` to allow for pagination of the results.

## 2.6.2

### Major Changes

### Minor Changes

- Added additional descriptive tokenTypes in NFT- and contract-level metadata, for contracts which don't support any NFT standard.

## 2.6.1

### Major Changes

### Minor Changes

- Added the `title` field to `ContractForOwner` to represent the title of the token held by the owner.
- Fixed a bug where the `media` field in `ContractForOwner` was a `Media` object rather than a `Media[]` array.
- Added support for the Eth Sepolia network via the `Network.ETH_SEPOLIA` enum.

## 2.6.0

### Major Changes

- Added the `NftMetadataUpdateWebhook` to be used with the `NotifyNamespace`. This webhook tracks all ERC721 and ERC1155 token metadata updates.

### Minor Changes

## 2.5.0

### Major Changes

- Added `TransactNamespace.simulateAssetChangesBundle()` to simulate a list of transactions in sequence and return a list of asset changes.
- Added `TransactNamespace.simulateExecutionBundle()` to simulate a list of transactions in sequence and return a list of decoded logs and traces.
- Added `NftNamespace.getContractMetadataBatch()` to get the metadata associated with multiple NFT contracts in a single request.

### Minor Changes

- Added exports for Ethers.js types and interfaces used by the SDK.
- Added the `pageSize` parameter to the `NftNamespace.getContractsForOwner()` method.

## 2.4.3

### Major Changes

### Minor Changes

- Added a missing `gas` field in the `DebugTransaction` interface to specify the gas provided for a transaction execution.
- Fixed a bug with `NftNamespace.getMintedNfts()`, `NftNamespace.getTransfersForOwner()`, and `NftNamespace.getTransfersForContract()` where the method would incorrectly error if the specified address had no transfers.
- Added the `BigNumber` ethers export. You can access this by importing `BigNumber` along with the other exports in the package.

## 2.4.2

### Major Changes

### Minor Changes

- Added the `CoreNamespace.getTokensForOwner()` method to get all the token balances and token metadata for a given address.
- Added the `wyvern` and `cryptopunks` marketplaces in the `NftSaleMarketplace` enum to the `NftNamespace.getNftSales()` method.
- Added the `blockHash` field to the `OwnedNftsResponse` returned by `NftNamespace.getNftsForOwner()` to track the block hash that the request was based on.

## 2.4.1

### Major Changes

### Minor Changes

- Added the `NftNamespace.getTransfersForOwner()` method to get all NFT transfers to or from a provided owner address.
- Added the `NftNamespace.getTransfersForContract()` method to all the NFT transfers for a provided NFT contract address.
- Deprecated the `GetMintedNftsResponse` interface in favor of the `TransfersNftResponse`. The `TransfersNftResponse` contains the same properties as the `GetMintedNftsResponse` and includes additional fields about the transfer.

## 2.4.0

### Major Changes

- Added `TransactNamespace.simulateAssetChanges()` to simulate a transaction and return a list of asset changes.
- Added `TransactNamespace.simulateExecution()` to simulate a transaction and return a list of decoded logs and traces.

### Minor Changes

## 2.3.1

### Major Changes

### Minor Changes

- Added support for passing in a `null` `tokenId` when using NFT Webhook Filters, which allows you to listen to all token ids in a collection.
- Added `NftNamespace.getMintedNfts()` to fetch all the NFTs an owner address minted, optionally filtered by a set of specific NFT contracts.
- Added the option to pass in an `EventFilter` with multiple addresses to the `CoreNamespace.getLogs()` method.
- Fixed a bug where the `protocolFee` was not included in the response for `NftNamespace.getNftSales()`. Deprecated the existing `marketplaceFee` property in favor of the new `protocolFee` property.

## 2.3.0

### Major Changes

- Added the `DebugNamespace` to the top-level `Alchemy` object. The `DebugNamespace` is used to replay and inspect transactions and mined blocks in greater detail.

### Minor Changes

- Added the `tokenUriTimeoutInMs` option to `NftNamespace.getNftsForContract()` to specify the timeout duration for fetching an NFT's underlying metadata.
- Fixed a bug where using `AlchemySubscriptions.PENDING_TRANSACTIONS` with a string array input would throw an error (#222).
- Added support for the `refreshCache` option in `NftNamespace.getNftMetadata()`. This option is now available when using the `options` overload. The original method without the `options` overload is now deprecated.
- Added support for the `requestTimeout` option in the `AlchemySettings` object to configure a timeout for `NftNamespace` and `NotifyNamespace` methods. Thanks @Abbaskt!
- Added the `contractDeployer` and `deployedBlockNumber` into the `NftContract` object. Methods that return NFTs such as `NftNamespace.getNftsForOwner()` and `NftNamespace.getContractsForOwner()` now include this information under the `contract` field.

## 2.2.5

### Major Changes

- Added `NftNamespace.getContractsForOwner()` to fetch all NFT contracts for a specified owner address.

### Minor Changes

- Fixed a bug in `NftNamespace.getNftsForOwner()` where the `openSea` metadata was not included in the returned NFT.
- Marked the `NftExcludeFilters` type as deprecated. Please use `NftFilters` instead.
- Added support for the `orderBy` param to `NftNamespace.getNftsForOwner()` and `NftNamespace.getContractsForOwner()`.

## 2.2.4

### Major Changes

### Minor Changes

- Fixed a bug where `newHeads` subscriptions would error and crash when reconnecting to the websocket.
- Fixed a bug where certain subscriptions would not reconnect after the websocket reconnected.
- Added exports for `toUtf8Bytes` and `toUtf8String` in `Utils`.

## 2.2.3

### Major Changes

### Minor Changes

- Fixed a typo with the `AlchemySettings.batchRequests` property.

## 2.2.2 (DEPRECATED)

### Major Changes

### Minor Changes

- Added support for ENS resolution to the `NotifyNamespace` and `WebsocketNamespace` methods.
- Added the `batchRequests` setting in `AlchemySettings`. Enabling this setting will automatically batch and send json-rpc requests to reduce network overhead.
- Included new export for the `Interface` class from ethers to simplify encoding ABI when using `eth_call`.
- Added support for the `NftNamespace.getNftMetadataBatch()` method to fetch metadata for multiple NFTs in a single call.
- Added support for the `NftNamespace.getNftSales()` method to fetch NFT sales across different marketplaces. Thanks @xeno097!

## 2.2.1

### Major Changes

### Minor Changes

- Fixed a bug where `AlchemyConfig.getWebsocketProvider()` was not exported as a public method. This method allows you get the underlying `WebsocketProvider` that is implemented by ethers.
- Added the `NftNamespace.summarizeNftAttributes()` method to get the summary of attribute prevalence for all NFTs in a contract.
- Added the `NftNamespace.searchContractMetadata()` method to search for a keyword across ERC721 and ERC1155 contract metadata.
- Added support for ENS resolution on several `CoreNamespace` methods. You should now be able to pass in an ENS domain into any param that requires an owner address.
- Added the `CoreNamespace.resolveName()` and `CoreNamespace.lookupAddress()` methods to resolve and lookup ENS domains and their owner addresses.
- Fixed a bug where the `Accept-Encoding` header was incorrectly included in requests that originated from the browser (#174).
- Added the `openSea` response to `NftNamespace.getContractMetadata()`to match the REST endpoint (#162).

## 2.2.0

### Major Changes

- Added the `NotifyNamespace` to the top-level `Alchemy` object. The `NotifyNamespace` is used to perform CRUD operations on webhooks in the Notify API.
- Added the `alchemy_minedTransactions` subscription event to the `WebsocketNamespace`. This subscription emits full transaction objects or hashes that are mined on the network based on provided filters.
- Added the `NftNamespace.computeRarity()` method to get the rarity attributes of the provided NFT. Thanks @xeno097!

### Minor Changes

## 2.1.1

### Minor Changes

- Added the `AIDROPS` enum to `NftNamespace.getNftsForOwner()`.
- Added the `spamInfo` field to the response for `getNftsForOwner()` and `getNftsForContract()`.
- Fixed a bug where type declarations were not available when using `NodeNext` module resolution. Thanks @quentinverlhac!
- Marked Ropsten, Rinkeby, and Kovan `Network` enums as deprecated. Please switch over to Sepolia.

## 2.1.0

### Major Changes

- POTENTIALLY BREAKING: Fixed a typing bug where the `totalSupply` field in an `NftContract` should have type `string` instead of `number`.
- Updated the `Nft` class to include the contract metadata in the `Nft.contract` field.
- Added commonly used utility methods from ethers.js into a top-level `Utils` export.
- Added the `NftNamespace.verifyNftOwnership()` method to replace the deprecated `checkNftOwnership()` method.
- Added `Contract` and `ContractFactory` exports from ethers into the top-level exports.

### Minor Changes

- Added support for `withTokenBalances` in `NftNamespace.getOwnersForContract()`.
- Added support for the `erc20` token type and pagination for `CoreNamespace.getTokenBalances()`.
- Added `bytes` field to the `Media` object in the NFT metadata responses to indicate the size of the media in bytes. Note that the `size` field is not supported by the backend and will be removed in the next version.

## 2.0.4

### Minor Changes

- Added a `size` field to the `Media` object in the NFT metadata responses to indicate the size of the media in bytes.
- Bumped `@ethersproject` dependencies to `v5.7.0` to support `safe` and `finalized` blocks.

## 2.0.3

### Minor Changes

- Added support for the `pageSize` parameter in `GetNftsForOwnerOptions` to specify the number of NFTs fetched when using `alchemy.nft.getNftsForOwner()`.
- Added support for a Wallet object. This object is identical to the Ethers `Wallet` class.
- Added support for Arbitrum Goerli network via the `Network.ARB_GOERLI` enum.
- Added support for the AStar Mainnet network via the `Network.ASTAR_MAINNET` enum.
- Added typed request/response overloads for `CoreNamespace.getAssetTransfers()` for when the `withMetadata` param is true.
- Added support the `tokenUriTimeoutInMs` parameter on `getNftsForOwner()`, `getNftMetadata()`, and `getNftsForContract()`.

## 2.0.2

### Major Changes

- Added the `transact` namespace for functionality relating to sending transactions. This includes the Flashbots methods `sendPrivateTransaction` and `cancelPrivateTransaction`.

### Minor Changes

- Removed the deprecated `TOKEN` enum from `AssetTransfersCategory`.
- Added support for Optimism Goerli network via the `Network.OPT_GOERLI` enum.
- Added the `pageSize` parameter in `GetNftsForContractOptions` to specify the number of NFTs fetched when using `alchemy.nft.getNftsForContract`.
- Added correct `withMetadata` typing to `AssetTransfersResponse`.

## 2.0.1

### Minor Changes

- Added an optional `url` setting to `AlchemySettings` to allow specifying a custom hardcoded URL to send all requests to.
- Fixed a bug where the SDK would incorrectly include a gzip header in browser environments

## 2.0.0

### Major Changes

- Top level package has moved from `@alch/alchemy-sdk` to `alchemy-sdk` for convenience. New command to install is `npm install alchemy-sdk`
- Updated instantiation syntax: `initializeAlchemy(settings)` is now `new Alchemy(settings)`
- Added three namespaces under the Alchemy object: `core`, `nft`, and `ws`. All Ethers.js provider methods and Alchemy Enhanced APIs (other than NFT) are under `core`.
- Moved top-level methods under the Alchemy object. Instead of `getNftsByOwner(alchemy, 'vitalik.eth')`, now methods are called using `alchemy.nft.getNftsByOwner('vitalik.eth')`
- Ethers.js Alchemy Provider methods are now directly embedded under `alchemy.core`
- Ethers.js WebSocket Provider methods are now directly embedded under `alchemy.ws`
- The settings object is now a config module under `alchemy.config`.
- If necessary, the full Ethers.js Provider is now available under `alchemy.config.getProvider()` as a promise to reduce bundle size.
- If necessary, the full WebSocket Provider is now available under `alchemy.config.getWebSocketProvider()` as a promise to reduce bundle size.
- Dynamic imports for large methods (in particular, Ethers.js methods) are now supported. Initial package size for the Alchemy SDK is 20kB, and will only download Ethers.js packages when a relevant method is called.
- Methods including Collection in the NFT package have been renamed to `Contract`: for instance, `getNftsForCollection` is now `getNftsForContract`.


================================================================================
File: CONTRIBUTING.md
Size: 1.62 kB
================================================================================

# Contributing to the Alchemy JS SDK

We'd love for you to contribute and help make the Alchemy SDK even better!

## Issues and Feature Requests

Before you create a new issue, please search the [existing issues](https://github.com/alchemyplatform/alchemy-sdk-js/issues?q=is%3Aissue).
Otherwise, please create a new issue and fill out the issue template.

## Codebase Overview

The Alchemy SDK contains multiple namespaces that encapsulate different functionality. See the `README.md` for a list of
namespaces and their methods.

We use [TypeScript](https://www.typescriptlang.org/) to provide type safety and documentation for the SDK. Here is a
brief overview of the codebase:

- `src`: Contains the source code for the SDK.
- `src/index.ts`: The entry point for the SDK. All developer facing classes and methods are exported here.
- `src/types`: Contains the TypeScript type definitions that are used and exported by the SDK.
- `src/api`: Contains the source code for exported Alchemy API namespaces and relevant classes/methods.
- `src/interal`: Contains the source code for internal helpers and implementations not intended for public use.

## Running Tests

To run the unit tests:

```bash
yarn test
```

To run the integration tests, first copy over the `sample-alchemy.env` file to `alchemy.env` and set your Alchemy API
key. Then run:

```bash
yarn test-integration
```

## Documentation

Documentation lives in the `/docs` and `/docs-md` directories. Please do not modify those directories, as the files there
are automatically generated when a new version is published.


================================================================================
File: docs\.nojekyll
Size: 143 B
================================================================================

TypeDoc added this file to prevent GitHub Pages from using Jekyll. You can turn off this behavior by setting the `githubPages` option to false.

================================================================================
File: docs\assets\highlight.css
Size: 2.2 kB
================================================================================

:root {
    --light-hl-0: #001080;
    --dark-hl-0: #9CDCFE;
    --light-hl-1: #000000;
    --dark-hl-1: #D4D4D4;
    --light-hl-2: #AF00DB;
    --dark-hl-2: #C586C0;
    --light-hl-3: #A31515;
    --dark-hl-3: #CE9178;
    --light-hl-4: #008000;
    --dark-hl-4: #6A9955;
    --light-hl-5: #0000FF;
    --dark-hl-5: #569CD6;
    --light-hl-6: #0070C1;
    --dark-hl-6: #4FC1FF;
    --light-hl-7: #795E26;
    --dark-hl-7: #DCDCAA;
    --light-code-background: #F5F5F5;
    --dark-code-background: #1E1E1E;
}

@media (prefers-color-scheme: light) { :root {
    --hl-0: var(--light-hl-0);
    --hl-1: var(--light-hl-1);
    --hl-2: var(--light-hl-2);
    --hl-3: var(--light-hl-3);
    --hl-4: var(--light-hl-4);
    --hl-5: var(--light-hl-5);
    --hl-6: var(--light-hl-6);
    --hl-7: var(--light-hl-7);
    --code-background: var(--light-code-background);
} }

@media (prefers-color-scheme: dark) { :root {
    --hl-0: var(--dark-hl-0);
    --hl-1: var(--dark-hl-1);
    --hl-2: var(--dark-hl-2);
    --hl-3: var(--dark-hl-3);
    --hl-4: var(--dark-hl-4);
    --hl-5: var(--dark-hl-5);
    --hl-6: var(--dark-hl-6);
    --hl-7: var(--dark-hl-7);
    --code-background: var(--dark-code-background);
} }

body.light {
    --hl-0: var(--light-hl-0);
    --hl-1: var(--light-hl-1);
    --hl-2: var(--light-hl-2);
    --hl-3: var(--light-hl-3);
    --hl-4: var(--light-hl-4);
    --hl-5: var(--light-hl-5);
    --hl-6: var(--light-hl-6);
    --hl-7: var(--light-hl-7);
    --code-background: var(--light-code-background);
}

body.dark {
    --hl-0: var(--dark-hl-0);
    --hl-1: var(--dark-hl-1);
    --hl-2: var(--dark-hl-2);
    --hl-3: var(--dark-hl-3);
    --hl-4: var(--dark-hl-4);
    --hl-5: var(--dark-hl-5);
    --hl-6: var(--dark-hl-6);
    --hl-7: var(--dark-hl-7);
    --code-background: var(--dark-code-background);
}

.hl-0 { color: var(--hl-0); }
.hl-1 { color: var(--hl-1); }
.hl-2 { color: var(--hl-2); }
.hl-3 { color: var(--hl-3); }
.hl-4 { color: var(--hl-4); }
.hl-5 { color: var(--hl-5); }
.hl-6 { color: var(--hl-6); }
.hl-7 { color: var(--hl-7); }
pre, code { background: var(--code-background); }


================================================================================
File: docs\assets\icons.css
Size: 36.24 kB
================================================================================

.tsd-kind-icon {
    display: block;
    position: relative;
    padding-left: 20px;
    text-indent: -20px;
}
.tsd-kind-icon:before {
    content: "";
    display: inline-block;
    vertical-align: middle;
    width: 17px;
    height: 17px;
    margin: 0 3px 2px 0;
    background-image: url(./icons.png);
}
@media (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi) {
    .tsd-kind-icon:before {
        background-image: url(./icons@2x.png);
        background-size: 238px 204px;
    }
}

.tsd-signature.tsd-kind-icon:before {
    background-position: 0 -153px;
}

.tsd-kind-object-literal > .tsd-kind-icon:before {
    background-position: 0px -17px;
}
.tsd-kind-object-literal.tsd-is-protected > .tsd-kind-icon:before {
    background-position: -17px -17px;
}
.tsd-kind-object-literal.tsd-is-private > .tsd-kind-icon:before {
    background-position: -34px -17px;
}

.tsd-kind-class > .tsd-kind-icon:before {
    background-position: 0px -34px;
}
.tsd-kind-class.tsd-is-protected > .tsd-kind-icon:before {
    background-position: -17px -34px;
}
.tsd-kind-class.tsd-is-private > .tsd-kind-icon:before {
    background-position: -34px -34px;
}

.tsd-kind-class.tsd-has-type-parameter > .tsd-kind-icon:before {
    background-position: 0px -51px;
}
.tsd-kind-class.tsd-has-type-parameter.tsd-is-protected
    > .tsd-kind-icon:before {
    background-position: -17px -51px;
}
.tsd-kind-class.tsd-has-type-parameter.tsd-is-private > .tsd-kind-icon:before {
    background-position: -34px -51px;
}

.tsd-kind-interface > .tsd-kind-icon:before {
    background-position: 0px -68px;
}
.tsd-kind-interface.tsd-is-protected > .tsd-kind-icon:before {
    background-position: -17px -68px;
}
.tsd-kind-interface.tsd-is-private > .tsd-kind-icon:before {
    background-position: -34px -68px;
}

.tsd-kind-interface.tsd-has-type-parameter > .tsd-kind-icon:before {
    background-position: 0px -85px;
}
.tsd-kind-interface.tsd-has-type-parameter.tsd-is-protected
    > .tsd-kind-icon:before {
    background-position: -17px -85px;
}
.tsd-kind-interface.tsd-has-type-parameter.tsd-is-private
    > .tsd-kind-icon:before {
    background-position: -34px -85px;
}

.tsd-kind-namespace > .tsd-kind-icon:before {
    background-position: 0px -102px;
}
.tsd-kind-namespace.tsd-is-protected > .tsd-kind-icon:before {
    background-position: -17px -102px;
}
.tsd-kind-namespace.tsd-is-private > .tsd-kind-icon:before {
    background-position: -34px -102px;
}

.tsd-kind-module > .tsd-kind-icon:before {
    background-position: 0px -102px;
}
.tsd-kind-module.tsd-is-protected > .tsd-kind-icon:before {
    background-position: -17px -102px;
}
.tsd-kind-module.tsd-is-private > .tsd-kind-icon:before {
    background-position: -34px -102px;
}

.tsd-kind-enum > .tsd-kind-icon:before {
    background-position: 0px -119px;
}
.tsd-kind-enum.tsd-is-protected > .tsd-kind-icon:before {
    background-position: -17px -119px;
}
.tsd-kind-enum.tsd-is-private > .tsd-kind-icon:before {
    background-position: -34px -119px;
}

.tsd-kind-enum-member > .tsd-kind-icon:before {
    background-position: 0px -136px;
}
.tsd-kind-enum-member.tsd-is-protected > .tsd-kind-icon:before {
    background-position: -17px -136px;
}
.tsd-kind-enum-member.tsd-is-private > .tsd-kind-icon:before {
    background-position: -34px -136px;
}

.tsd-kind-signature > .tsd-kind-icon:before {
    background-position: 0px -153px;
}
.tsd-kind-signature.tsd-is-protected > .tsd-kind-icon:before {
    background-position: -17px -153px;
}
.tsd-kind-signature.tsd-is-private > .tsd-kind-icon:before {
    background-position: -34px -153px;
}

.tsd-kind-type-alias > .tsd-kind-icon:before {
    background-position: 0px -170px;
}
.tsd-kind-type-alias.tsd-is-protected > .tsd-kind-icon:before {
    background-position: -17px -170px;
}
.tsd-kind-type-alias.tsd-is-private > .tsd-kind-icon:before {
    background-position: -34px -170px;
}

.tsd-kind-type-alias.tsd-has-type-parameter > .tsd-kind-icon:before {
    background-position: 0px -187px;
}
.tsd-kind-type-alias.tsd-has-type-parameter.tsd-is-protected
    > .tsd-kind-icon:before {
    background-position: -17px -187px;
}
.tsd-kind-type-alias.tsd-has-type-parameter.tsd-is-private
    > .tsd-kind-icon:before {
    background-position: -34px -187px;
}

.tsd-kind-variable > .tsd-kind-icon:before {
    background-position: -136px -0px;
}
.tsd-kind-variable.tsd-is-protected > .tsd-kind-icon:before {
    background-position: -153px -0px;
}
.tsd-kind-variable.tsd-is-private > .tsd-kind-icon:before {
    background-position: -119px -0px;
}
.tsd-kind-variable.tsd-parent-kind-class > .tsd-kind-icon:before {
    background-position: -51px -0px;
}
.tsd-kind-variable.tsd-parent-kind-class.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -68px -0px;
}
.tsd-kind-variable.tsd-parent-kind-class.tsd-is-protected
    > .tsd-kind-icon:before {
    background-position: -85px -0px;
}
.tsd-kind-variable.tsd-parent-kind-class.tsd-is-protected.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -102px -0px;
}
.tsd-kind-variable.tsd-parent-kind-class.tsd-is-private
    > .tsd-kind-icon:before {
    background-position: -119px -0px;
}
.tsd-kind-variable.tsd-parent-kind-enum > .tsd-kind-icon:before {
    background-position: -170px -0px;
}
.tsd-kind-variable.tsd-parent-kind-enum.tsd-is-protected
    > .tsd-kind-icon:before {
    background-position: -187px -0px;
}
.tsd-kind-variable.tsd-parent-kind-enum.tsd-is-private > .tsd-kind-icon:before {
    background-position: -119px -0px;
}
.tsd-kind-variable.tsd-parent-kind-interface > .tsd-kind-icon:before {
    background-position: -204px -0px;
}
.tsd-kind-variable.tsd-parent-kind-interface.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -221px -0px;
}

.tsd-kind-property > .tsd-kind-icon:before {
    background-position: -136px -0px;
}
.tsd-kind-property.tsd-is-protected > .tsd-kind-icon:before {
    background-position: -153px -0px;
}
.tsd-kind-property.tsd-is-private > .tsd-kind-icon:before {
    background-position: -119px -0px;
}
.tsd-kind-property.tsd-parent-kind-class > .tsd-kind-icon:before {
    background-position: -51px -0px;
}
.tsd-kind-property.tsd-parent-kind-class.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -68px -0px;
}
.tsd-kind-property.tsd-parent-kind-class.tsd-is-protected
    > .tsd-kind-icon:before {
    background-position: -85px -0px;
}
.tsd-kind-property.tsd-parent-kind-class.tsd-is-protected.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -102px -0px;
}
.tsd-kind-property.tsd-parent-kind-class.tsd-is-private
    > .tsd-kind-icon:before {
    background-position: -119px -0px;
}
.tsd-kind-property.tsd-parent-kind-enum > .tsd-kind-icon:before {
    background-position: -170px -0px;
}
.tsd-kind-property.tsd-parent-kind-enum.tsd-is-protected
    > .tsd-kind-icon:before {
    background-position: -187px -0px;
}
.tsd-kind-property.tsd-parent-kind-enum.tsd-is-private > .tsd-kind-icon:before {
    background-position: -119px -0px;
}
.tsd-kind-property.tsd-parent-kind-interface > .tsd-kind-icon:before {
    background-position: -204px -0px;
}
.tsd-kind-property.tsd-parent-kind-interface.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -221px -0px;
}

.tsd-kind-get-signature > .tsd-kind-icon:before {
    background-position: -136px -17px;
}
.tsd-kind-get-signature.tsd-is-protected > .tsd-kind-icon:before {
    background-position: -153px -17px;
}
.tsd-kind-get-signature.tsd-is-private > .tsd-kind-icon:before {
    background-position: -119px -17px;
}
.tsd-kind-get-signature.tsd-parent-kind-class > .tsd-kind-icon:before {
    background-position: -51px -17px;
}
.tsd-kind-get-signature.tsd-parent-kind-class.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -68px -17px;
}
.tsd-kind-get-signature.tsd-parent-kind-class.tsd-is-protected
    > .tsd-kind-icon:before {
    background-position: -85px -17px;
}
.tsd-kind-get-signature.tsd-parent-kind-class.tsd-is-protected.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -102px -17px;
}
.tsd-kind-get-signature.tsd-parent-kind-class.tsd-is-private
    > .tsd-kind-icon:before {
    background-position: -119px -17px;
}
.tsd-kind-get-signature.tsd-parent-kind-enum > .tsd-kind-icon:before {
    background-position: -170px -17px;
}
.tsd-kind-get-signature.tsd-parent-kind-enum.tsd-is-protected
    > .tsd-kind-icon:before {
    background-position: -187px -17px;
}
.tsd-kind-get-signature.tsd-parent-kind-enum.tsd-is-private
    > .tsd-kind-icon:before {
    background-position: -119px -17px;
}
.tsd-kind-get-signature.tsd-parent-kind-interface > .tsd-kind-icon:before {
    background-position: -204px -17px;
}
.tsd-kind-get-signature.tsd-parent-kind-interface.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -221px -17px;
}

.tsd-kind-set-signature > .tsd-kind-icon:before {
    background-position: -136px -34px;
}
.tsd-kind-set-signature.tsd-is-protected > .tsd-kind-icon:before {
    background-position: -153px -34px;
}
.tsd-kind-set-signature.tsd-is-private > .tsd-kind-icon:before {
    background-position: -119px -34px;
}
.tsd-kind-set-signature.tsd-parent-kind-class > .tsd-kind-icon:before {
    background-position: -51px -34px;
}
.tsd-kind-set-signature.tsd-parent-kind-class.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -68px -34px;
}
.tsd-kind-set-signature.tsd-parent-kind-class.tsd-is-protected
    > .tsd-kind-icon:before {
    background-position: -85px -34px;
}
.tsd-kind-set-signature.tsd-parent-kind-class.tsd-is-protected.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -102px -34px;
}
.tsd-kind-set-signature.tsd-parent-kind-class.tsd-is-private
    > .tsd-kind-icon:before {
    background-position: -119px -34px;
}
.tsd-kind-set-signature.tsd-parent-kind-enum > .tsd-kind-icon:before {
    background-position: -170px -34px;
}
.tsd-kind-set-signature.tsd-parent-kind-enum.tsd-is-protected
    > .tsd-kind-icon:before {
    background-position: -187px -34px;
}
.tsd-kind-set-signature.tsd-parent-kind-enum.tsd-is-private
    > .tsd-kind-icon:before {
    background-position: -119px -34px;
}
.tsd-kind-set-signature.tsd-parent-kind-interface > .tsd-kind-icon:before {
    background-position: -204px -34px;
}
.tsd-kind-set-signature.tsd-parent-kind-interface.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -221px -34px;
}

.tsd-kind-accessor > .tsd-kind-icon:before {
    background-position: -136px -51px;
}
.tsd-kind-accessor.tsd-is-protected > .tsd-kind-icon:before {
    background-position: -153px -51px;
}
.tsd-kind-accessor.tsd-is-private > .tsd-kind-icon:before {
    background-position: -119px -51px;
}
.tsd-kind-accessor.tsd-parent-kind-class > .tsd-kind-icon:before {
    background-position: -51px -51px;
}
.tsd-kind-accessor.tsd-parent-kind-class.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -68px -51px;
}
.tsd-kind-accessor.tsd-parent-kind-class.tsd-is-protected
    > .tsd-kind-icon:before {
    background-position: -85px -51px;
}
.tsd-kind-accessor.tsd-parent-kind-class.tsd-is-protected.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -102px -51px;
}
.tsd-kind-accessor.tsd-parent-kind-class.tsd-is-private
    > .tsd-kind-icon:before {
    background-position: -119px -51px;
}
.tsd-kind-accessor.tsd-parent-kind-enum > .tsd-kind-icon:before {
    background-position: -170px -51px;
}
.tsd-kind-accessor.tsd-parent-kind-enum.tsd-is-protected
    > .tsd-kind-icon:before {
    background-position: -187px -51px;
}
.tsd-kind-accessor.tsd-parent-kind-enum.tsd-is-private > .tsd-kind-icon:before {
    background-position: -119px -51px;
}
.tsd-kind-accessor.tsd-parent-kind-interface > .tsd-kind-icon:before {
    background-position: -204px -51px;
}
.tsd-kind-accessor.tsd-parent-kind-interface.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -221px -51px;
}

.tsd-kind-function > .tsd-kind-icon:before {
    background-position: -136px -68px;
}
.tsd-kind-function.tsd-is-protected > .tsd-kind-icon:before {
    background-position: -153px -68px;
}
.tsd-kind-function.tsd-is-private > .tsd-kind-icon:before {
    background-position: -119px -68px;
}
.tsd-kind-function.tsd-parent-kind-class > .tsd-kind-icon:before {
    background-position: -51px -68px;
}
.tsd-kind-function.tsd-parent-kind-class.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -68px -68px;
}
.tsd-kind-function.tsd-parent-kind-class.tsd-is-protected
    > .tsd-kind-icon:before {
    background-position: -85px -68px;
}
.tsd-kind-function.tsd-parent-kind-class.tsd-is-protected.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -102px -68px;
}
.tsd-kind-function.tsd-parent-kind-class.tsd-is-private
    > .tsd-kind-icon:before {
    background-position: -119px -68px;
}
.tsd-kind-function.tsd-parent-kind-enum > .tsd-kind-icon:before {
    background-position: -170px -68px;
}
.tsd-kind-function.tsd-parent-kind-enum.tsd-is-protected
    > .tsd-kind-icon:before {
    background-position: -187px -68px;
}
.tsd-kind-function.tsd-parent-kind-enum.tsd-is-private > .tsd-kind-icon:before {
    background-position: -119px -68px;
}
.tsd-kind-function.tsd-parent-kind-interface > .tsd-kind-icon:before {
    background-position: -204px -68px;
}
.tsd-kind-function.tsd-parent-kind-interface.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -221px -68px;
}

.tsd-kind-method > .tsd-kind-icon:before {
    background-position: -136px -68px;
}
.tsd-kind-method.tsd-is-protected > .tsd-kind-icon:before {
    background-position: -153px -68px;
}
.tsd-kind-method.tsd-is-private > .tsd-kind-icon:before {
    background-position: -119px -68px;
}
.tsd-kind-method.tsd-parent-kind-class > .tsd-kind-icon:before {
    background-position: -51px -68px;
}
.tsd-kind-method.tsd-parent-kind-class.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -68px -68px;
}
.tsd-kind-method.tsd-parent-kind-class.tsd-is-protected
    > .tsd-kind-icon:before {
    background-position: -85px -68px;
}
.tsd-kind-method.tsd-parent-kind-class.tsd-is-protected.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -102px -68px;
}
.tsd-kind-method.tsd-parent-kind-class.tsd-is-private > .tsd-kind-icon:before {
    background-position: -119px -68px;
}
.tsd-kind-method.tsd-parent-kind-enum > .tsd-kind-icon:before {
    background-position: -170px -68px;
}
.tsd-kind-method.tsd-parent-kind-enum.tsd-is-protected > .tsd-kind-icon:before {
    background-position: -187px -68px;
}
.tsd-kind-method.tsd-parent-kind-enum.tsd-is-private > .tsd-kind-icon:before {
    background-position: -119px -68px;
}
.tsd-kind-method.tsd-parent-kind-interface > .tsd-kind-icon:before {
    background-position: -204px -68px;
}
.tsd-kind-method.tsd-parent-kind-interface.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -221px -68px;
}

.tsd-kind-call-signature > .tsd-kind-icon:before {
    background-position: -136px -68px;
}
.tsd-kind-call-signature.tsd-is-protected > .tsd-kind-icon:before {
    background-position: -153px -68px;
}
.tsd-kind-call-signature.tsd-is-private > .tsd-kind-icon:before {
    background-position: -119px -68px;
}
.tsd-kind-call-signature.tsd-parent-kind-class > .tsd-kind-icon:before {
    background-position: -51px -68px;
}
.tsd-kind-call-signature.tsd-parent-kind-class.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -68px -68px;
}
.tsd-kind-call-signature.tsd-parent-kind-class.tsd-is-protected
    > .tsd-kind-icon:before {
    background-position: -85px -68px;
}
.tsd-kind-call-signature.tsd-parent-kind-class.tsd-is-protected.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -102px -68px;
}
.tsd-kind-call-signature.tsd-parent-kind-class.tsd-is-private
    > .tsd-kind-icon:before {
    background-position: -119px -68px;
}
.tsd-kind-call-signature.tsd-parent-kind-enum > .tsd-kind-icon:before {
    background-position: -170px -68px;
}
.tsd-kind-call-signature.tsd-parent-kind-enum.tsd-is-protected
    > .tsd-kind-icon:before {
    background-position: -187px -68px;
}
.tsd-kind-call-signature.tsd-parent-kind-enum.tsd-is-private
    > .tsd-kind-icon:before {
    background-position: -119px -68px;
}
.tsd-kind-call-signature.tsd-parent-kind-interface > .tsd-kind-icon:before {
    background-position: -204px -68px;
}
.tsd-kind-call-signature.tsd-parent-kind-interface.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -221px -68px;
}

.tsd-kind-function.tsd-has-type-parameter > .tsd-kind-icon:before {
    background-position: -136px -85px;
}
.tsd-kind-function.tsd-has-type-parameter.tsd-is-protected
    > .tsd-kind-icon:before {
    background-position: -153px -85px;
}
.tsd-kind-function.tsd-has-type-parameter.tsd-is-private
    > .tsd-kind-icon:before {
    background-position: -119px -85px;
}
.tsd-kind-function.tsd-has-type-parameter.tsd-parent-kind-class
    > .tsd-kind-icon:before {
    background-position: -51px -85px;
}
.tsd-kind-function.tsd-has-type-parameter.tsd-parent-kind-class.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -68px -85px;
}
.tsd-kind-function.tsd-has-type-parameter.tsd-parent-kind-class.tsd-is-protected
    > .tsd-kind-icon:before {
    background-position: -85px -85px;
}
.tsd-kind-function.tsd-has-type-parameter.tsd-parent-kind-class.tsd-is-protected.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -102px -85px;
}
.tsd-kind-function.tsd-has-type-parameter.tsd-parent-kind-class.tsd-is-private
    > .tsd-kind-icon:before {
    background-position: -119px -85px;
}
.tsd-kind-function.tsd-has-type-parameter.tsd-parent-kind-enum
    > .tsd-kind-icon:before {
    background-position: -170px -85px;
}
.tsd-kind-function.tsd-has-type-parameter.tsd-parent-kind-enum.tsd-is-protected
    > .tsd-kind-icon:before {
    background-position: -187px -85px;
}
.tsd-kind-function.tsd-has-type-parameter.tsd-parent-kind-enum.tsd-is-private
    > .tsd-kind-icon:before {
    background-position: -119px -85px;
}
.tsd-kind-function.tsd-has-type-parameter.tsd-parent-kind-interface
    > .tsd-kind-icon:before {
    background-position: -204px -85px;
}
.tsd-kind-function.tsd-has-type-parameter.tsd-parent-kind-interface.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -221px -85px;
}

.tsd-kind-method.tsd-has-type-parameter > .tsd-kind-icon:before {
    background-position: -136px -85px;
}
.tsd-kind-method.tsd-has-type-parameter.tsd-is-protected
    > .tsd-kind-icon:before {
    background-position: -153px -85px;
}
.tsd-kind-method.tsd-has-type-parameter.tsd-is-private > .tsd-kind-icon:before {
    background-position: -119px -85px;
}
.tsd-kind-method.tsd-has-type-parameter.tsd-parent-kind-class
    > .tsd-kind-icon:before {
    background-position: -51px -85px;
}
.tsd-kind-method.tsd-has-type-parameter.tsd-parent-kind-class.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -68px -85px;
}
.tsd-kind-method.tsd-has-type-parameter.tsd-parent-kind-class.tsd-is-protected
    > .tsd-kind-icon:before {
    background-position: -85px -85px;
}
.tsd-kind-method.tsd-has-type-parameter.tsd-parent-kind-class.tsd-is-protected.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -102px -85px;
}
.tsd-kind-method.tsd-has-type-parameter.tsd-parent-kind-class.tsd-is-private
    > .tsd-kind-icon:before {
    background-position: -119px -85px;
}
.tsd-kind-method.tsd-has-type-parameter.tsd-parent-kind-enum
    > .tsd-kind-icon:before {
    background-position: -170px -85px;
}
.tsd-kind-method.tsd-has-type-parameter.tsd-parent-kind-enum.tsd-is-protected
    > .tsd-kind-icon:before {
    background-position: -187px -85px;
}
.tsd-kind-method.tsd-has-type-parameter.tsd-parent-kind-enum.tsd-is-private
    > .tsd-kind-icon:before {
    background-position: -119px -85px;
}
.tsd-kind-method.tsd-has-type-parameter.tsd-parent-kind-interface
    > .tsd-kind-icon:before {
    background-position: -204px -85px;
}
.tsd-kind-method.tsd-has-type-parameter.tsd-parent-kind-interface.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -221px -85px;
}

.tsd-kind-constructor > .tsd-kind-icon:before {
    background-position: -136px -102px;
}
.tsd-kind-constructor.tsd-is-protected > .tsd-kind-icon:before {
    background-position: -153px -102px;
}
.tsd-kind-constructor.tsd-is-private > .tsd-kind-icon:before {
    background-position: -119px -102px;
}
.tsd-kind-constructor.tsd-parent-kind-class > .tsd-kind-icon:before {
    background-position: -51px -102px;
}
.tsd-kind-constructor.tsd-parent-kind-class.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -68px -102px;
}
.tsd-kind-constructor.tsd-parent-kind-class.tsd-is-protected
    > .tsd-kind-icon:before {
    background-position: -85px -102px;
}
.tsd-kind-constructor.tsd-parent-kind-class.tsd-is-protected.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -102px -102px;
}
.tsd-kind-constructor.tsd-parent-kind-class.tsd-is-private
    > .tsd-kind-icon:before {
    background-position: -119px -102px;
}
.tsd-kind-constructor.tsd-parent-kind-enum > .tsd-kind-icon:before {
    background-position: -170px -102px;
}
.tsd-kind-constructor.tsd-parent-kind-enum.tsd-is-protected
    > .tsd-kind-icon:before {
    background-position: -187px -102px;
}
.tsd-kind-constructor.tsd-parent-kind-enum.tsd-is-private
    > .tsd-kind-icon:before {
    background-position: -119px -102px;
}
.tsd-kind-constructor.tsd-parent-kind-interface > .tsd-kind-icon:before {
    background-position: -204px -102px;
}
.tsd-kind-constructor.tsd-parent-kind-interface.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -221px -102px;
}

.tsd-kind-constructor-signature > .tsd-kind-icon:before {
    background-position: -136px -102px;
}
.tsd-kind-constructor-signature.tsd-is-protected > .tsd-kind-icon:before {
    background-position: -153px -102px;
}
.tsd-kind-constructor-signature.tsd-is-private > .tsd-kind-icon:before {
    background-position: -119px -102px;
}
.tsd-kind-constructor-signature.tsd-parent-kind-class > .tsd-kind-icon:before {
    background-position: -51px -102px;
}
.tsd-kind-constructor-signature.tsd-parent-kind-class.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -68px -102px;
}
.tsd-kind-constructor-signature.tsd-parent-kind-class.tsd-is-protected
    > .tsd-kind-icon:before {
    background-position: -85px -102px;
}
.tsd-kind-constructor-signature.tsd-parent-kind-class.tsd-is-protected.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -102px -102px;
}
.tsd-kind-constructor-signature.tsd-parent-kind-class.tsd-is-private
    > .tsd-kind-icon:before {
    background-position: -119px -102px;
}
.tsd-kind-constructor-signature.tsd-parent-kind-enum > .tsd-kind-icon:before {
    background-position: -170px -102px;
}
.tsd-kind-constructor-signature.tsd-parent-kind-enum.tsd-is-protected
    > .tsd-kind-icon:before {
    background-position: -187px -102px;
}
.tsd-kind-constructor-signature.tsd-parent-kind-enum.tsd-is-private
    > .tsd-kind-icon:before {
    background-position: -119px -102px;
}
.tsd-kind-constructor-signature.tsd-parent-kind-interface
    > .tsd-kind-icon:before {
    background-position: -204px -102px;
}
.tsd-kind-constructor-signature.tsd-parent-kind-interface.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -221px -102px;
}

.tsd-kind-index-signature > .tsd-kind-icon:before {
    background-position: -136px -119px;
}
.tsd-kind-index-signature.tsd-is-protected > .tsd-kind-icon:before {
    background-position: -153px -119px;
}
.tsd-kind-index-signature.tsd-is-private > .tsd-kind-icon:before {
    background-position: -119px -119px;
}
.tsd-kind-index-signature.tsd-parent-kind-class > .tsd-kind-icon:before {
    background-position: -51px -119px;
}
.tsd-kind-index-signature.tsd-parent-kind-class.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -68px -119px;
}
.tsd-kind-index-signature.tsd-parent-kind-class.tsd-is-protected
    > .tsd-kind-icon:before {
    background-position: -85px -119px;
}
.tsd-kind-index-signature.tsd-parent-kind-class.tsd-is-protected.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -102px -119px;
}
.tsd-kind-index-signature.tsd-parent-kind-class.tsd-is-private
    > .tsd-kind-icon:before {
    background-position: -119px -119px;
}
.tsd-kind-index-signature.tsd-parent-kind-enum > .tsd-kind-icon:before {
    background-position: -170px -119px;
}
.tsd-kind-index-signature.tsd-parent-kind-enum.tsd-is-protected
    > .tsd-kind-icon:before {
    background-position: -187px -119px;
}
.tsd-kind-index-signature.tsd-parent-kind-enum.tsd-is-private
    > .tsd-kind-icon:before {
    background-position: -119px -119px;
}
.tsd-kind-index-signature.tsd-parent-kind-interface > .tsd-kind-icon:before {
    background-position: -204px -119px;
}
.tsd-kind-index-signature.tsd-parent-kind-interface.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -221px -119px;
}

.tsd-kind-event > .tsd-kind-icon:before {
    background-position: -136px -136px;
}
.tsd-kind-event.tsd-is-protected > .tsd-kind-icon:before {
    background-position: -153px -136px;
}
.tsd-kind-event.tsd-is-private > .tsd-kind-icon:before {
    background-position: -119px -136px;
}
.tsd-kind-event.tsd-parent-kind-class > .tsd-kind-icon:before {
    background-position: -51px -136px;
}
.tsd-kind-event.tsd-parent-kind-class.tsd-is-inherited > .tsd-kind-icon:before {
    background-position: -68px -136px;
}
.tsd-kind-event.tsd-parent-kind-class.tsd-is-protected > .tsd-kind-icon:before {
    background-position: -85px -136px;
}
.tsd-kind-event.tsd-parent-kind-class.tsd-is-protected.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -102px -136px;
}
.tsd-kind-event.tsd-parent-kind-class.tsd-is-private > .tsd-kind-icon:before {
    background-position: -119px -136px;
}
.tsd-kind-event.tsd-parent-kind-enum > .tsd-kind-icon:before {
    background-position: -170px -136px;
}
.tsd-kind-event.tsd-parent-kind-enum.tsd-is-protected > .tsd-kind-icon:before {
    background-position: -187px -136px;
}
.tsd-kind-event.tsd-parent-kind-enum.tsd-is-private > .tsd-kind-icon:before {
    background-position: -119px -136px;
}
.tsd-kind-event.tsd-parent-kind-interface > .tsd-kind-icon:before {
    background-position: -204px -136px;
}
.tsd-kind-event.tsd-parent-kind-interface.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -221px -136px;
}

.tsd-is-static > .tsd-kind-icon:before {
    background-position: -136px -153px;
}
.tsd-is-static.tsd-is-protected > .tsd-kind-icon:before {
    background-position: -153px -153px;
}
.tsd-is-static.tsd-is-private > .tsd-kind-icon:before {
    background-position: -119px -153px;
}
.tsd-is-static.tsd-parent-kind-class > .tsd-kind-icon:before {
    background-position: -51px -153px;
}
.tsd-is-static.tsd-parent-kind-class.tsd-is-inherited > .tsd-kind-icon:before {
    background-position: -68px -153px;
}
.tsd-is-static.tsd-parent-kind-class.tsd-is-protected > .tsd-kind-icon:before {
    background-position: -85px -153px;
}
.tsd-is-static.tsd-parent-kind-class.tsd-is-protected.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -102px -153px;
}
.tsd-is-static.tsd-parent-kind-class.tsd-is-private > .tsd-kind-icon:before {
    background-position: -119px -153px;
}
.tsd-is-static.tsd-parent-kind-enum > .tsd-kind-icon:before {
    background-position: -170px -153px;
}
.tsd-is-static.tsd-parent-kind-enum.tsd-is-protected > .tsd-kind-icon:before {
    background-position: -187px -153px;
}
.tsd-is-static.tsd-parent-kind-enum.tsd-is-private > .tsd-kind-icon:before {
    background-position: -119px -153px;
}
.tsd-is-static.tsd-parent-kind-interface > .tsd-kind-icon:before {
    background-position: -204px -153px;
}
.tsd-is-static.tsd-parent-kind-interface.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -221px -153px;
}

.tsd-is-static.tsd-kind-function > .tsd-kind-icon:before {
    background-position: -136px -170px;
}
.tsd-is-static.tsd-kind-function.tsd-is-protected > .tsd-kind-icon:before {
    background-position: -153px -170px;
}
.tsd-is-static.tsd-kind-function.tsd-is-private > .tsd-kind-icon:before {
    background-position: -119px -170px;
}
.tsd-is-static.tsd-kind-function.tsd-parent-kind-class > .tsd-kind-icon:before {
    background-position: -51px -170px;
}
.tsd-is-static.tsd-kind-function.tsd-parent-kind-class.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -68px -170px;
}
.tsd-is-static.tsd-kind-function.tsd-parent-kind-class.tsd-is-protected
    > .tsd-kind-icon:before {
    background-position: -85px -170px;
}
.tsd-is-static.tsd-kind-function.tsd-parent-kind-class.tsd-is-protected.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -102px -170px;
}
.tsd-is-static.tsd-kind-function.tsd-parent-kind-class.tsd-is-private
    > .tsd-kind-icon:before {
    background-position: -119px -170px;
}
.tsd-is-static.tsd-kind-function.tsd-parent-kind-enum > .tsd-kind-icon:before {
    background-position: -170px -170px;
}
.tsd-is-static.tsd-kind-function.tsd-parent-kind-enum.tsd-is-protected
    > .tsd-kind-icon:before {
    background-position: -187px -170px;
}
.tsd-is-static.tsd-kind-function.tsd-parent-kind-enum.tsd-is-private
    > .tsd-kind-icon:before {
    background-position: -119px -170px;
}
.tsd-is-static.tsd-kind-function.tsd-parent-kind-interface
    > .tsd-kind-icon:before {
    background-position: -204px -170px;
}
.tsd-is-static.tsd-kind-function.tsd-parent-kind-interface.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -221px -170px;
}

.tsd-is-static.tsd-kind-method > .tsd-kind-icon:before {
    background-position: -136px -170px;
}
.tsd-is-static.tsd-kind-method.tsd-is-protected > .tsd-kind-icon:before {
    background-position: -153px -170px;
}
.tsd-is-static.tsd-kind-method.tsd-is-private > .tsd-kind-icon:before {
    background-position: -119px -170px;
}
.tsd-is-static.tsd-kind-method.tsd-parent-kind-class > .tsd-kind-icon:before {
    background-position: -51px -170px;
}
.tsd-is-static.tsd-kind-method.tsd-parent-kind-class.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -68px -170px;
}
.tsd-is-static.tsd-kind-method.tsd-parent-kind-class.tsd-is-protected
    > .tsd-kind-icon:before {
    background-position: -85px -170px;
}
.tsd-is-static.tsd-kind-method.tsd-parent-kind-class.tsd-is-protected.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -102px -170px;
}
.tsd-is-static.tsd-kind-method.tsd-parent-kind-class.tsd-is-private
    > .tsd-kind-icon:before {
    background-position: -119px -170px;
}
.tsd-is-static.tsd-kind-method.tsd-parent-kind-enum > .tsd-kind-icon:before {
    background-position: -170px -170px;
}
.tsd-is-static.tsd-kind-method.tsd-parent-kind-enum.tsd-is-protected
    > .tsd-kind-icon:before {
    background-position: -187px -170px;
}
.tsd-is-static.tsd-kind-method.tsd-parent-kind-enum.tsd-is-private
    > .tsd-kind-icon:before {
    background-position: -119px -170px;
}
.tsd-is-static.tsd-kind-method.tsd-parent-kind-interface
    > .tsd-kind-icon:before {
    background-position: -204px -170px;
}
.tsd-is-static.tsd-kind-method.tsd-parent-kind-interface.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -221px -170px;
}

.tsd-is-static.tsd-kind-call-signature > .tsd-kind-icon:before {
    background-position: -136px -170px;
}
.tsd-is-static.tsd-kind-call-signature.tsd-is-protected
    > .tsd-kind-icon:before {
    background-position: -153px -170px;
}
.tsd-is-static.tsd-kind-call-signature.tsd-is-private > .tsd-kind-icon:before {
    background-position: -119px -170px;
}
.tsd-is-static.tsd-kind-call-signature.tsd-parent-kind-class
    > .tsd-kind-icon:before {
    background-position: -51px -170px;
}
.tsd-is-static.tsd-kind-call-signature.tsd-parent-kind-class.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -68px -170px;
}
.tsd-is-static.tsd-kind-call-signature.tsd-parent-kind-class.tsd-is-protected
    > .tsd-kind-icon:before {
    background-position: -85px -170px;
}
.tsd-is-static.tsd-kind-call-signature.tsd-parent-kind-class.tsd-is-protected.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -102px -170px;
}
.tsd-is-static.tsd-kind-call-signature.tsd-parent-kind-class.tsd-is-private
    > .tsd-kind-icon:before {
    background-position: -119px -170px;
}
.tsd-is-static.tsd-kind-call-signature.tsd-parent-kind-enum
    > .tsd-kind-icon:before {
    background-position: -170px -170px;
}
.tsd-is-static.tsd-kind-call-signature.tsd-parent-kind-enum.tsd-is-protected
    > .tsd-kind-icon:before {
    background-position: -187px -170px;
}
.tsd-is-static.tsd-kind-call-signature.tsd-parent-kind-enum.tsd-is-private
    > .tsd-kind-icon:before {
    background-position: -119px -170px;
}
.tsd-is-static.tsd-kind-call-signature.tsd-parent-kind-interface
    > .tsd-kind-icon:before {
    background-position: -204px -170px;
}
.tsd-is-static.tsd-kind-call-signature.tsd-parent-kind-interface.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -221px -170px;
}

.tsd-is-static.tsd-kind-event > .tsd-kind-icon:before {
    background-position: -136px -187px;
}
.tsd-is-static.tsd-kind-event.tsd-is-protected > .tsd-kind-icon:before {
    background-position: -153px -187px;
}
.tsd-is-static.tsd-kind-event.tsd-is-private > .tsd-kind-icon:before {
    background-position: -119px -187px;
}
.tsd-is-static.tsd-kind-event.tsd-parent-kind-class > .tsd-kind-icon:before {
    background-position: -51px -187px;
}
.tsd-is-static.tsd-kind-event.tsd-parent-kind-class.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -68px -187px;
}
.tsd-is-static.tsd-kind-event.tsd-parent-kind-class.tsd-is-protected
    > .tsd-kind-icon:before {
    background-position: -85px -187px;
}
.tsd-is-static.tsd-kind-event.tsd-parent-kind-class.tsd-is-protected.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -102px -187px;
}
.tsd-is-static.tsd-kind-event.tsd-parent-kind-class.tsd-is-private
    > .tsd-kind-icon:before {
    background-position: -119px -187px;
}
.tsd-is-static.tsd-kind-event.tsd-parent-kind-enum > .tsd-kind-icon:before {
    background-position: -170px -187px;
}
.tsd-is-static.tsd-kind-event.tsd-parent-kind-enum.tsd-is-protected
    > .tsd-kind-icon:before {
    background-position: -187px -187px;
}
.tsd-is-static.tsd-kind-event.tsd-parent-kind-enum.tsd-is-private
    > .tsd-kind-icon:before {
    background-position: -119px -187px;
}
.tsd-is-static.tsd-kind-event.tsd-parent-kind-interface
    > .tsd-kind-icon:before {
    background-position: -204px -187px;
}
.tsd-is-static.tsd-kind-event.tsd-parent-kind-interface.tsd-is-inherited
    > .tsd-kind-icon:before {
    background-position: -221px -187px;
}


================================================================================
File: docs\assets\main.js
Size: 43.06 kB
================================================================================

(()=>{var Ce=Object.create;var ue=Object.defineProperty;var Pe=Object.getOwnPropertyDescriptor;var Oe=Object.getOwnPropertyNames;var Re=Object.getPrototypeOf,_e=Object.prototype.hasOwnProperty;var Me=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports);var De=(t,e,r,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of Oe(e))!_e.call(t,i)&&i!==r&&ue(t,i,{get:()=>e[i],enumerable:!(n=Pe(e,i))||n.enumerable});return t};var Fe=(t,e,r)=>(r=t!=null?Ce(Re(t)):{},De(e||!t||!t.__esModule?ue(r,"default",{value:t,enumerable:!0}):r,t));var pe=Me((de,fe)=>{(function(){var t=function(e){var r=new t.Builder;return r.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),r.searchPipeline.add(t.stemmer),e.call(r,r),r.build()};t.version="2.3.9";t.utils={},t.utils.warn=function(e){return function(r){e.console&&console.warn&&console.warn(r)}}(this),t.utils.asString=function(e){return e==null?"":e.toString()},t.utils.clone=function(e){if(e==null)return e;for(var r=Object.create(null),n=Object.keys(e),i=0;i<n.length;i++){var s=n[i],o=e[s];if(Array.isArray(o)){r[s]=o.slice();continue}if(typeof o=="string"||typeof o=="number"||typeof o=="boolean"){r[s]=o;continue}throw new TypeError("clone is not deep and does not support nested objects")}return r},t.FieldRef=function(e,r,n){this.docRef=e,this.fieldName=r,this._stringValue=n},t.FieldRef.joiner="/",t.FieldRef.fromString=function(e){var r=e.indexOf(t.FieldRef.joiner);if(r===-1)throw"malformed field ref string";var n=e.slice(0,r),i=e.slice(r+1);return new t.FieldRef(i,n,e)},t.FieldRef.prototype.toString=function(){return this._stringValue==null&&(this._stringValue=this.fieldName+t.FieldRef.joiner+this.docRef),this._stringValue};t.Set=function(e){if(this.elements=Object.create(null),e){this.length=e.length;for(var r=0;r<this.length;r++)this.elements[e[r]]=!0}else this.length=0},t.Set.complete={intersect:function(e){return e},union:function(){return this},contains:function(){return!0}},t.Set.empty={intersect:function(){return this},union:function(e){return e},contains:function(){return!1}},t.Set.prototype.contains=function(e){return!!this.elements[e]},t.Set.prototype.intersect=function(e){var r,n,i,s=[];if(e===t.Set.complete)return this;if(e===t.Set.empty)return e;this.length<e.length?(r=this,n=e):(r=e,n=this),i=Object.keys(r.elements);for(var o=0;o<i.length;o++){var a=i[o];a in n.elements&&s.push(a)}return new t.Set(s)},t.Set.prototype.union=function(e){return e===t.Set.complete?t.Set.complete:e===t.Set.empty?this:new t.Set(Object.keys(this.elements).concat(Object.keys(e.elements)))},t.idf=function(e,r){var n=0;for(var i in e)i!="_index"&&(n+=Object.keys(e[i]).length);var s=(r-n+.5)/(n+.5);return Math.log(1+Math.abs(s))},t.Token=function(e,r){this.str=e||"",this.metadata=r||{}},t.Token.prototype.toString=function(){return this.str},t.Token.prototype.update=function(e){return this.str=e(this.str,this.metadata),this},t.Token.prototype.clone=function(e){return e=e||function(r){return r},new t.Token(e(this.str,this.metadata),this.metadata)};t.tokenizer=function(e,r){if(e==null||e==null)return[];if(Array.isArray(e))return e.map(function(p){return new t.Token(t.utils.asString(p).toLowerCase(),t.utils.clone(r))});for(var n=e.toString().toLowerCase(),i=n.length,s=[],o=0,a=0;o<=i;o++){var u=n.charAt(o),l=o-a;if(u.match(t.tokenizer.separator)||o==i){if(l>0){var h=t.utils.clone(r)||{};h.position=[a,l],h.index=s.length,s.push(new t.Token(n.slice(a,o),h))}a=o+1}}return s},t.tokenizer.separator=/[\s\-]+/;t.Pipeline=function(){this._stack=[]},t.Pipeline.registeredFunctions=Object.create(null),t.Pipeline.registerFunction=function(e,r){r in this.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+r),e.label=r,t.Pipeline.registeredFunctions[e.label]=e},t.Pipeline.warnIfFunctionNotRegistered=function(e){var r=e.label&&e.label in this.registeredFunctions;r||t.utils.warn(`Function is not registered with pipeline. This may cause problems when serialising the index.